;; load root, util, klaim contracts
(load "l2.repl")

(begin-tx "load gas station contract")
(env-data {
  'ns: "n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9"
, 'upgrade: false
})

(env-keys ["368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca"])
(load "gas-station.pact")
(commit-tx)

(begin-tx)
(env-keys [])
(use n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.gas-station)

(test-capability (coin.COINBASE))
(coin.coinbase GAS_STATION GAS_STATION_GUARD 10.0)
(commit-tx)

;; SUCCESS CASE
(begin-tx)
(use n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.gas-station)

(env-chain-data {
  "gas-price":  0.000000000001
  })
(env-data {
  "tx-type": "exec"
, "exec-code": ["(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.some-function)"]
  })

(test-capability (coin.GAS))
(test-capability (GAS_PAYER "user" 1 1.0))

(expect
  "buy gas succeeds"
  "Write succeeded"
  (coin.buy-gas GAS_STATION 1.0))
(commit-tx)

;;FAILING CASES
(begin-tx)
(use n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.gas-station)

(env-chain-data {
  "gas-price":  0.000000000001
  })

;;mismatching namespace
(env-data {
  "tx-type": "exec"
, "exec-code": ["(m_bd7f56c0bc111ea42026912c37ff5da89149d9dc.some-function)"]
  })

(test-capability (coin.GAS))
(expect-failure
  "GAS_PAYER Cap not granted"
  "only n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9 namespace"
  (test-capability (GAS_PAYER "user" 1 1.0)))

(expect-failure
  "buy-gas fails"
  "None of the guards passed"
  (coin.buy-gas GAS_STATION 1.0))

;;mismatching tx-type
(env-data {
  "tx-type": "cont"
, "exec-code": ["(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.some-function)"]
  })

(expect-failure
  "GAS_PAYER Cap not granted"
  "Inside an exec"
  (test-capability (GAS_PAYER "user" 1 1.0)))

(expect-failure
  "buy-gas fails"
  "None of the guards passed"
  (coin.buy-gas GAS_STATION 1.0))

;;more than one code
(env-data {
  "tx-type": "exec"
, "exec-code": [
    "(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.another)"
    "(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.another)"
  ]})

(expect-failure
  "GAS_PAYER Cap not granted"
  "Tx of only one pact function"
  (test-capability (GAS_PAYER "user" 1 1.0)))

(expect-failure
  "buy-gas fails"
  "None of the guards passed"
  (coin.buy-gas GAS_STATION 1.0))

;;high gas price
(env-chain-data {
  "gas-price":  0.000002
  })
(env-data {
  "tx-type": "exec"
, "exec-code": ["(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.some-function)"]
})

(expect-failure
  "GAS_PAYER Cap not granted"
  "Gas Price must be smaller than or equal to 0.0000001"
  (test-capability (GAS_PAYER "user" 1 1.0)))

(expect-failure
  "buy-gas fails"
  "None of the guards passed"
  (coin.buy-gas GAS_STATION 1.0))

(commit-tx)

;;BUY GAS FAILING CASE SUCCEEDS WITH ADMIN KEY
(begin-tx)
(use n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.gas-station)

(env-chain-data {
  "gas-price":  0.000000000002
  })

(env-data {
  "tx-type": "cont"
, "exec-code": ["(n_560eefcee4a090a24f12d7cf68cd48f11d8d2bd9.some-function)", "(+ 1 2)"]
  })

(test-capability (coin.GAS))
(expect-failure
  "GAS_PAYER Cap not granted"
  "Inside an exec"
  (test-capability (GAS_PAYER "user" 1 1.0)))

(expect-failure
  "buy-gas fails"
  "None of the guards passed"
  (coin.buy-gas GAS_STATION 1.0))

;;insert admin key
(env-keys ["368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca"])
(expect
  "buy-gas succeeds without GAS_PAYER"
  "Write succeeded"
  (coin.buy-gas GAS_STATION 1.0))

;;rotate succeeds
(env-sigs [{
  "key": "368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca",
  "caps": [(coin.ROTATE GAS_STATION)]
  }])
(coin.rotate GAS_STATION NS_KEYSET)

(commit-tx)

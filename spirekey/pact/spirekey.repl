(load "util/guards.repl")

(env-data
  { 'spirekey-keyset :
    { 'pred          : "keys-all"
    , 'keys          :
      [ "operate" ]
    }
  })
(env-sigs
  [{ 'key  : "operate"
   , 'caps : []
   }])
(begin-tx "Create webauthn namespace and define webauthn keyset")
(let* ((spirekey-namespace 'kadena)
       (spirekey-keyset "kadena.spirekey-keyset")
      )
  (define-namespace
    spirekey-namespace
    (read-keyset 'spirekey-keyset)
    (read-keyset 'spirekey-keyset))
  (namespace spirekey-namespace)
  (define-keyset
    spirekey-keyset
    (read-keyset 'spirekey-keyset)
  )
)
(commit-tx)
(env-data {})
(env-sigs [])

(env-data
  { 'spirekey-keyset      : 
    { 'keys : ["operate"]
    , 'pred : 'keys-all
    }
  , 'upgrade              : false
  }
)
(env-sigs
  [{ 'key  : "operate"
   , 'caps : []
   }
  ]
)
(begin-tx "Load spirekey contract")
(load "spirekey.pact")
(commit-tx)

(env-data
  { 'ns-keyset :
    { 'keys : ["WEBAUTHN-alice-phone" "tempkeyset"]
    , 'pred : "keys-any"
    }
  }
)
(env-sigs [{ 'key : "tempkeyset", 'caps: [] }])
(begin-tx "Create alice account")
(let* (
  (ns-name (ns.create-principal-namespace (read-keyset 'ns-keyset)))
  (ks-ref-name (format "{}.{}" [ns-name 'ns-keyset]))
)
  (define-namespace
    ns-name
    (read-keyset 'ns-keyset )
    (read-keyset 'ns-keyset )
  )
  (namespace ns-name)
  (define-keyset ks-ref-name
    (read-keyset 'ns-keyset)
  )
  (let ( 
    (account (create-principal (keyset-ref-guard ks-ref-name)))
  )
    (coin.create-account
      account
      (keyset-ref-guard ks-ref-name)
    )
    (kadena.spirekey.add-device-pair
      account
      coin
      { 'guard          :  (read-keyset 'ns-keyset)
      , 'credential-id  :  "credential-id"
      , 'domain         :  "https://chainweaver.kadena.io"
      , 'device-type    :  "device-type"
      , 'color          :  "#hexcolor"
      }
    )
  )
)
(commit-tx)

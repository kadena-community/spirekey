{"version":3,"file":"TrackerCard.js","sourceRoot":"","sources":["../../../../src/components/TrackerCard/TrackerCard.tsx"],"names":[],"mappings":";;;;;;AAAA,4DAAoC;AAEpC,kDAA0B;AAC1B,0BAA8C;AAC9C,uDAa2B;AAmBpB,MAAM,WAAW,GAA0B,CAAC,EACjD,WAAW,EACX,IAAI,EACJ,UAAU,EACV,cAAc,GAAG,MAAM,EACvB,OAAO,GAAG,UAAU,GACrB,EAAe,EAAE;IAChB,MAAM,kBAAkB,GAAG,IAAA,oBAAU,EACnC,+BAAa,EACb,IAAI,CAAC,CAAC,CAAC,+BAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EACpC,6BAAW,CAAC,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,eAAe,GAAG,IAAA,oBAAU,EAChC,qCAAmB,EACnB,gCAAc,CAAC,OAAO,CAAC,EACvB,+BAAa,CAAC,OAAO,CAAC,EACtB,sCAAoB,CAAC,OAAO,CAAC,CAC9B,CAAC;IAEF,MAAM,qBAAqB,GAAG,IAAA,oBAAU,EACtC,yCAAuB,EACvB,gCAAc,CAAC,cAAc,CAAC,CAC/B,CAAC;IAEF,MAAM,IAAI,GAAG,IAAI,IAAI,eAAW,CAAC,IAAI,CAAC,CAAC;IAEvC,OAAO,CACL,uCAAK,SAAS,EAAE,kBAAkB,iBAAc,kBAAkB;QAC/D,IAAI,CAAC,CAAC,CAAC,8BAAC,IAAI,mBAAa,UAAU,EAAC,IAAI,EAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI;QACxD,uCAAK,SAAS,EAAE,kCAAgB;YAC9B,uCAAK,SAAS,EAAE,+BAAa,iBAAc,oBAAoB,IAC5D,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBAChC,OAAO,CACL,uCACE,SAAS,EAAE,eAAe,EAC1B,GAAG,EAAE,yBAAyB,KAAK,EAAE,iBACxB,6BAA6B,KAAK,EAAE;oBAEjD,uCACE,SAAS,EAAE,4BAAU,EACrB,GAAG,EAAE,SAAS,KAAK,EAAE,iBACR,aAAa,KAAK,EAAE,IAEhC,IAAI,CAAC,KAAK,CACP;oBACL,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAC9B,8BAAC,eAAW,IACV,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,iBAAiB,EAAE,IAAI,CAAC,cAAc,EACtC,mBAAmB,EAAE,IAAI,CAAC,aAAa,EACvC,iBAAiB,EAAE,IAAI,CAAC,WAAW,EACnC,GAAG,EAAE,gBAAgB,KAAK,EAAE,iBACf,oBAAoB,KAAK,EAAE,GACxC,CACH,CAAC,CAAC,CAAC,CACF,uCACE,SAAS,EAAE,4BAAU,EACrB,GAAG,EAAE,SAAS,KAAK,EAAE,iBACR,aAAa,KAAK,EAAE,IAEhC,IAAI,CAAC,KAAK,CACP,CACP,CACG,CACP,CAAC;YACJ,CAAC,CAAC,CACE;YACL,UAAU,CAAC,CAAC,CAAC,CACZ,uCAAK,SAAS,EAAE,qBAAqB,iBAAc,iBAAiB,IACjE,UAAU,CACP,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AA5EW,QAAA,WAAW,eA4EtB","sourcesContent":["import classNames from 'classnames';\nimport type { FC } from 'react';\nimport React from 'react';\nimport { MaskedValue, ProductIcon } from '..';\nimport {\n  CardContainer,\n  ContentContainer,\n  DataContainer,\n  LabelTitle,\n  LabelValue,\n  LabelValueContainer,\n  TrackerWarningContainer,\n  displayVariant,\n  gapValueLabelVariant,\n  gridVariant,\n  layoutVariant,\n  warningVariant,\n} from './TrackerCard.css';\n\nexport interface ITrackerCardProps {\n  labelValues: ILabelValue[];\n  helperText?: string;\n  helperTextType?: 'mild' | 'severe';\n  icon?: keyof typeof ProductIcon;\n  variant?: keyof typeof layoutVariant;\n}\n\nexport interface ILabelValue {\n  label: string;\n  value?: string;\n  isAccount?: boolean;\n  defaultVisible?: boolean;\n  startUnmasked?: number;\n  endUnmasked?: number;\n}\n\nexport const TrackerCard: FC<ITrackerCardProps> = ({\n  labelValues,\n  icon,\n  helperText,\n  helperTextType = 'mild',\n  variant = 'vertical',\n}): JSX.Element => {\n  const classCardContainer = classNames(\n    CardContainer,\n    icon ? layoutVariant[variant] : null,\n    gridVariant[variant],\n  );\n\n  const classLabelValue = classNames(\n    LabelValueContainer,\n    displayVariant[variant],\n    layoutVariant[variant],\n    gapValueLabelVariant[variant],\n  );\n\n  const classWarningContainer = classNames(\n    TrackerWarningContainer,\n    warningVariant[helperTextType],\n  );\n\n  const Icon = icon && ProductIcon[icon];\n\n  return (\n    <div className={classCardContainer} data-testid=\"kda-tracker-card\">\n      {Icon ? <Icon data-testid=\"kda-icon\" size=\"xl\" /> : null}\n      <div className={ContentContainer}>\n        <div className={DataContainer} data-testid=\"kda-data-container\">\n          {labelValues?.map((item, index) => {\n            return (\n              <div\n                className={classLabelValue}\n                key={`label-value-container-${index}`}\n                data-testid={`kda-label-value-container-${index}`}\n              >\n                <div\n                  className={LabelTitle}\n                  key={`label-${index}`}\n                  data-testid={`kda-label-${index}`}\n                >\n                  {item.label}\n                </div>\n                {item.isAccount && item.value ? (\n                  <MaskedValue\n                    value={item.value}\n                    defaultVisibility={item.defaultVisible}\n                    startUnmaskedValues={item.startUnmasked}\n                    endUnmaskedValues={item.endUnmasked}\n                    key={`masked-value-${index}`}\n                    data-testid={`kda-masked-value-${index}`}\n                  />\n                ) : (\n                  <div\n                    className={LabelValue}\n                    key={`value-${index}`}\n                    data-testid={`kda-value-${index}`}\n                  >\n                    {item.value}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        {helperText ? (\n          <div className={classWarningContainer} data-testid=\"kda-helper-text\">\n            {helperText}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n"]}
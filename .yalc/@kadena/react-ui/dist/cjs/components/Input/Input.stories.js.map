{"version":3,"file":"Input.stories.js","sourceRoot":"","sources":["../../../../src/components/Input/Input.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Button } from '@components/Button';\nimport { SystemIcon } from '@components/Icon';\nimport type { IInputProps } from '@components/Input';\nimport { Input } from '@components/Input';\nimport { Stack } from '@components/Stack';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { vars } from '@theme/vars.css';\nimport type { HTMLInputTypeAttribute } from 'react';\nimport React from 'react';\n\nconst HTMLInputTypes: HTMLInputTypeAttribute[] = [\n  'button',\n  'checkbox',\n  'color',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\nconst meta: Meta<IInputProps> = {\n  title: 'Form/Input',\n  component: Input,\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The Input component is a wrapper around the native input element that provides the ability to add additional information.',\n      },\n    },\n  },\n  argTypes: {\n    type: {\n      control: { type: 'select' },\n      options: HTMLInputTypes,\n    },\n    disabled: {\n      description: 'Disables the input and applies visual styling.',\n      control: {\n        type: 'boolean',\n      },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    leftIcon: {\n      description:\n        'Icon rendered inside the input to the left of the input text.',\n      options: [\n        '-',\n        ...(Object.keys(SystemIcon) as (keyof typeof SystemIcon)[]),\n      ],\n      control: {\n        type: 'select',\n      },\n    },\n    rightIcon: {\n      description:\n        'Icon rendered inside the input to the right of the input text.',\n      options: [\n        '-',\n        ...(Object.keys(SystemIcon) as (keyof typeof SystemIcon)[]),\n      ],\n      control: {\n        type: 'select',\n      },\n    },\n    leadingText: {\n      description: 'Leading text that is rendered to the left of the input.',\n      control: {\n        type: 'text',\n      },\n    },\n    leadingTextWidth: {\n      description:\n        'Width of the leading text. Defaults to the size of the text itself.',\n      control: {\n        type: 'select',\n      },\n      options: [\n        '- Omit this property to auto-size the leading text',\n        ...Object.keys(vars.sizes).map((key) => key as keyof typeof vars.sizes),\n      ],\n    },\n    outlined: {\n      description: 'Option to render the input with an outline.',\n      control: {\n        type: 'boolean',\n      },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<\n  {\n    leadingText: string;\n    leftIcon: keyof typeof SystemIcon;\n    rightIcon: keyof typeof SystemIcon;\n    type: React.HTMLInputTypeAttribute;\n  } & Omit<IInputProps, 'leftIcon' | 'rightIcon'>\n>;\n\nexport const Dynamic: Story = {\n  name: 'Input',\n  args: {\n    leftIcon: undefined,\n    type: 'text',\n    rightIcon: undefined,\n    leadingText: '',\n    leadingTextWidth: undefined,\n    outlined: false,\n  },\n  render: ({\n    leftIcon,\n    rightIcon,\n    outlined,\n    leadingText,\n    leadingTextWidth,\n    onChange,\n    disabled,\n    type,\n  }) => (\n    <Input\n      id=\"inlineInputStory\"\n      leftIcon={leftIcon}\n      rightIcon={rightIcon}\n      onChange={onChange}\n      placeholder=\"This is a placeholder\"\n      leadingText={leadingText}\n      leadingTextWidth={leadingTextWidth}\n      outlined={outlined}\n      disabled={disabled}\n      type={type}\n    />\n  ),\n};\n\nexport const InlineWithButton: Story = {\n  name: 'Inline with button',\n  args: {\n    leftIcon: undefined,\n    type: 'text',\n  },\n  render: ({ leftIcon, onChange, type }) => (\n    <Stack gap=\"$xs\" alignItems=\"stretch\">\n      <Input\n        id=\"inlineInputStory\"\n        leftIcon={leftIcon}\n        onChange={onChange}\n        placeholder=\"This is a placeholder\"\n        outlined\n        type={type}\n      />\n      <Button title=\"Submit\" onClick={() => {}}>\n        Submit\n      </Button>\n    </Stack>\n  ),\n};\n"]}
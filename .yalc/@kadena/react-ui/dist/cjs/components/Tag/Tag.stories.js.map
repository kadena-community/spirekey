{"version":3,"file":"Tag.stories.js","sourceRoot":"","sources":["../../../../src/components/Tag/Tag.stories.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA4C;AAE5C,yCAAsC;AAEtC,+CAAwC;AAExC,MAAM,IAAI,GAKN;IACF,KAAK,EAAE,gBAAgB;IACvB,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,CAAC,eAAe,CAAC;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,yJAAyJ;aAC5J;SACF;KACF;IACD,SAAS,EAAE,SAAG;IACd,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAQP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,KAAK;IACX,IAAI,EAAE;QACJ,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE,IAAI;KACf;IACD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;QAC7B,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,MAAM;YAAE,OAAO,8BAAC,eAAM,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,YAAgB,CAAC;QAC3E,OAAO,CACL,8BAAC,SAAG,IAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,IAAG,IAAI,CAAO,CACzE,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { Button } from '@components/Button';\nimport type { ITagProps } from '@components/Tag';\nimport { Tag } from '@components/Tag';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React, { useState } from 'react';\n\nconst meta: Meta<\n  {\n    hasClose: boolean;\n    text: string;\n  } & ITagProps\n> = {\n  title: 'Components/Tag',\n  parameters: {\n    status: {\n      type: ['inDevelopment'],\n    },\n    docs: {\n      description: {\n        component:\n          'The Tag component renders a tag with a text. This tag can be dismissed by the user by clicking the X icon when the optional `onClose` prop is provided.',\n      },\n    },\n  },\n  component: Tag,\n  argTypes: {\n    text: {\n      control: {\n        type: 'text',\n      },\n    },\n    hasClose: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<\n  {\n    text: string;\n    hasClose: boolean;\n  } & ITagProps\n>;\n\nexport const Primary: Story = {\n  name: 'Tag',\n  args: {\n    text: 'Chain:1',\n    hasClose: true,\n  },\n  render: ({ text, hasClose }) => {\n    const [closed, setClosed] = useState(false);\n\n    if (closed) return <Button onClick={() => setClosed(false)}>Reset</Button>;\n    return (\n      <Tag onClose={hasClose ? () => setClosed(true) : undefined}>{text}</Tag>\n    );\n  },\n};\n"]}
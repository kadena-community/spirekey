{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAyC;AACzC,6CAA8C;AAE9C,+CAAoD;AACpD,2CAA2D;AAE3D,iDAAuD;AACvD,+CAAwD;AAQjD,MAAM,OAAO,GAAsB,CAAC,EACzC,QAAQ,EACR,OAAO,EACP,QAAQ,GAAG,OAAO,EAClB,GAAG,KAAK,EACT,EAAE,EAAE;IACH,MAAM,MAAM,GAAG;QACb,KAAK,EAAE,GAAG;QACV,UAAU,EAAE,GAAG;QACf,GAAG,KAAK;KACT,CAAC;IACF,MAAM,KAAK,GAAG,IAAA,sCAAsB,EAAC,MAAM,CAAC,CAAC;IAC7C,MAAM,GAAG,GAAG,IAAA,cAAM,EAAC,IAAI,CAAC,CAAC;IAEzB,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,IAAA,8BAAiB,EACxE,MAAM,EACN,KAAK,EACL,GAAG,CACJ,CAAC;IAEF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAA,uBAAU,EAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAE7D,OAAO,CACL,8BAAC,YAAG,IAAC,QAAQ,EAAC,UAAU;QACrB,IAAA,oBAAY,EAAC,QAAQ,EAAE;YACtB,GAAG,YAAY;YAEf,GAAG,EAAE,IAAA,iBAAS,EAAC,GAAG,EAAG,QAAgB,CAAC,GAAG,CAAC;SAC3C,CAAC;QAED,KAAK,CAAC,MAAM,IAAI,CACf,wCAAM,SAAS,EAAE,qCAAuB,CAAC,QAAQ,CAAC,KAAM,YAAY,IACjE,OAAO,CACH,CACR,CACG,CACP,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,OAAO,WAqClB","sourcesContent":["import { Box } from '@components/Layout';\nimport { mergeRefs } from '@react-aria/utils';\nimport type { FC, ReactElement, ReactNode } from 'react';\nimport React, { cloneElement, useRef } from 'react';\nimport { useTooltip, useTooltipTrigger } from 'react-aria';\nimport type { TooltipTriggerProps } from 'react-stately';\nimport { useTooltipTriggerState } from 'react-stately';\nimport { tooltipPositionVariants } from './Tooltip.css';\nexport interface ITooltipProps\n  extends Omit<TooltipTriggerProps, 'trigger' | 'onOpenChange'> {\n  children: ReactElement;\n  content: ReactNode;\n  position?: keyof typeof tooltipPositionVariants;\n}\n\nexport const Tooltip: FC<ITooltipProps> = ({\n  children,\n  content,\n  position = 'right',\n  ...props\n}) => {\n  const config = {\n    delay: 500,\n    closeDelay: 300,\n    ...props,\n  };\n  const state = useTooltipTriggerState(config);\n  const ref = useRef(null);\n\n  const { triggerProps, tooltipProps: baseTooltipProps } = useTooltipTrigger(\n    config,\n    state,\n    ref,\n  );\n\n  const { tooltipProps } = useTooltip(baseTooltipProps, state);\n\n  return (\n    <Box position=\"relative\">\n      {cloneElement(children, {\n        ...triggerProps,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ref: mergeRefs(ref, (children as any).ref),\n      })}\n\n      {state.isOpen && (\n        <span className={tooltipPositionVariants[position]} {...tooltipProps}>\n          {content}\n        </span>\n      )}\n    </Box>\n  );\n};\n"]}
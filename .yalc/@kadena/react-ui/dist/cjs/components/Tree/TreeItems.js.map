{"version":3,"file":"TreeItems.js","sourceRoot":"","sources":["../../../../src/components/Tree/TreeItems.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\nimport { SystemIcon } from '@components/Icon';\nimport classNames from 'classnames';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\nimport {\n  treeBranchWrapperVariant,\n  treeTitleClass,\n  treeTitleClassWrapper,\n  treeTitleVariant,\n  treeToggleClass,\n  treeToggleVariant,\n  treeWrapperClass,\n} from './Tree.css';\n\ninterface ITreeItemProps {\n  title?: React.ReactNode;\n  items?: Omit<ITreeItemProps, 'linked'>[];\n  isOpen?: boolean;\n  linked?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const TreeItem: FC<ITreeItemProps> = ({\n  title,\n  items,\n  isOpen,\n  linked = false,\n  onOpen,\n  onClose,\n}) => {\n  const hasTitle = !!title;\n  const hasChildren = !!items?.length;\n  const initialExpandedChildren: number[] = items\n    ?.map((item, index) => (item.isOpen ? index : undefined))\n    .filter((item) => item !== undefined) as number[];\n\n  const [expandedChildren, setExpandedChildren] = useState<number[]>(\n    initialExpandedChildren,\n  );\n\n  const handleExpandChildren = (index: number): void => {\n    if (linked) {\n      expandedChildren.forEach(\n        (childrenIndex) => items?.[childrenIndex]?.onClose?.(),\n      );\n      setExpandedChildren([index]);\n    } else setExpandedChildren([...expandedChildren, index]);\n\n    items?.[index]?.onOpen?.();\n  };\n\n  const handleCollapseChildren = (index: number): void => {\n    setExpandedChildren(expandedChildren.filter((item) => item !== index));\n    items?.[index]?.onClose?.();\n  };\n\n  const handleToggle = (): void => {\n    if (!hasChildren) return;\n    if (isOpen) onClose?.();\n    else onOpen?.();\n  };\n\n  return (\n    <div className={treeWrapperClass} data-testid=\"kda-tree-item\" role=\"tree\">\n      {hasTitle && (\n        <div\n          className={classNames(treeTitleClassWrapper, { isOpen })}\n          onClick={handleToggle}\n          role=\"treeitem\"\n          aria-selected={Boolean(isOpen)}\n          data-testid=\"kda-tree-title\"\n        >\n          <span\n            className={classNames(\n              treeToggleClass,\n              treeToggleVariant[isOpen ? 'opened' : 'closed'],\n            )}\n          >\n            {hasChildren ? (\n              <SystemIcon.ChevronDown size=\"md\" />\n            ) : (\n              <SystemIcon.Circle size=\"md\" />\n            )}\n          </span>\n          <span\n            className={classNames(\n              treeTitleClass,\n              treeTitleVariant[hasChildren ? 'isParent' : 'isChild'],\n            )}\n          >\n            {title}\n          </span>\n        </div>\n      )}\n\n      {isOpen && (\n        <div\n          className={\n            treeBranchWrapperVariant[hasTitle ? 'isChild' : 'isParent']\n          }\n        >\n          {items?.map((item, index) => (\n            <TreeItem\n              key={String(item.title)}\n              title={item.title}\n              items={item?.items ?? []}\n              isOpen={expandedChildren.includes(index)}\n              onOpen={() => handleExpandChildren(index)}\n              onClose={() => handleCollapseChildren(index)}\n              linked={Boolean(linked)}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"]}
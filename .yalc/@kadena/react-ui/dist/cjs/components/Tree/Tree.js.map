{"version":3,"file":"Tree.js","sourceRoot":"","sources":["../../../../src/components/Tree/Tree.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AACb,0DAAsD;AAEtD,+CAAwC;AAWjC,MAAM,IAAI,GAAmB,CAAC,EACnC,KAAK,EACL,KAAK,EACL,MAAM,EAAE,aAAa,GAAG,KAAK,EAC7B,MAAM,GAAG,KAAK,EACd,MAAM,EACN,OAAO,GACR,EAAE,EAAE;IACH,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,IAAA,gBAAQ,EAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAE7D,MAAM,UAAU,GAAG,GAAS,EAAE;QAC5B,SAAS,CAAC,IAAI,CAAC,CAAC;QAChB,MAAM,aAAN,MAAM,uBAAN,MAAM,EAAI,CAAC;IACb,CAAC,CAAC;IACF,MAAM,WAAW,GAAG,GAAS,EAAE;QAC7B,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB,OAAO,aAAP,OAAO,uBAAP,OAAO,EAAI,CAAC;IACd,CAAC,CAAC;IAEF,OAAO,CACL,8BAAC,oBAAQ,IACP,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,EAClB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,EAAE,EAClB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,UAAU,EAClB,OAAO,EAAE,WAAW,EACpB,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,GACvB,CACH,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,IAAI,QA8Bf","sourcesContent":["'use client';\nimport { TreeItem } from '@components/Tree/TreeItems';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\n\nexport interface ITreeProps {\n  title?: React.ReactNode;\n  items?: Omit<ITreeProps, 'linked'>[];\n  isOpen?: boolean;\n  linked?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const Tree: FC<ITreeProps> = ({\n  title,\n  items,\n  isOpen: initialIsOpen = false,\n  linked = false,\n  onOpen,\n  onClose,\n}) => {\n  const [isOpen, setIsOpen] = useState(Boolean(initialIsOpen));\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n    onOpen?.();\n  };\n  const handleClose = (): void => {\n    setIsOpen(false);\n    onClose?.();\n  };\n\n  return (\n    <TreeItem\n      key={String(title)}\n      title={title}\n      items={items ?? []}\n      isOpen={isOpen}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      linked={Boolean(linked)}\n    />\n  );\n};\n"]}
{"version":3,"file":"Card.stories.js","sourceRoot":"","sources":["../../../../src/components/Card/Card.stories.tsx"],"names":[],"mappings":";;;;;;AAAA,+CAA4C;AAE5C,2CAAwC;AACxC,+CAA2C;AAC3C,uDAAuD;AACvD,uDAAuE;AAEvE,kDAA0B;AAE1B,MAAM,IAAI,GAAqB;IAC7B,KAAK,EAAE,aAAa;IACpB,UAAU,EAAE,CAAC,mCAAgB,EAAE,oCAAiB,CAAC;IACjD,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,CAAC,eAAe,CAAC;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EAAE,gDAAgD;aAC5D;SACF;KACF;IACD,SAAS,EAAE,WAAI;IACf,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;YACD,WAAW,EACT,kEAAkE;YACpE,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;aACnC;SACF;QAED,QAAQ,EAAE;YACR,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;YACD,WAAW,EAAE,gDAAgD;YAC7D,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;aACnC;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAGP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE;QACJ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,KAAK;KAChB;IACD,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE;QAClC,OAAO,CACL;YACE,8BAAC,WAAI,IAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;gBAC5C,8BAAC,cAAK,IACJ,aAAa,EAAC,QAAQ,EACtB,GAAG,EAAC,IAAI,EACR,UAAU,EAAC,YAAY,EACvB,cAAc,EAAC,IAAI,EACnB,QAAQ,EAAC,kBAAkB;oBAE3B,8BAAC,oBAAO,IAAC,EAAE,EAAC,IAAI,sBAA0B;oBAC1C,8BAAC,iBAAI,yXAOE,CACD;gBACR,8BAAC,eAAM,IAAC,KAAK,EAAE,QAAQ,kBAAsB,CACxC,CACN,CACJ,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { Button } from '@components/Button';\nimport type { ICardProps } from '@components/Card';\nimport { Card } from '@components/Card';\nimport { Stack } from '@components/Layout';\nimport { Heading, Text } from '@components/Typography';\nimport { withCenteredStory, withContentWidth } from '@storyDecorators';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\n\nconst meta: Meta<ICardProps> = {\n  title: 'Layout/Card',\n  decorators: [withContentWidth, withCenteredStory],\n  parameters: {\n    status: {\n      type: ['needsRevision'],\n    },\n    docs: {\n      description: {\n        component: 'A component used for grouping items in a card.',\n      },\n    },\n  },\n  component: Card,\n  argTypes: {\n    fullWidth: {\n      control: {\n        type: 'boolean',\n      },\n      description:\n        'An option to make the card span the full width of its container.',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n      description: 'Disables the input and applies visual styling.',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ICardProps>;\n\nexport const Primary: Story = {\n  name: 'Card',\n  args: {\n    fullWidth: false,\n    disabled: false,\n  },\n  render: ({ fullWidth, disabled }) => {\n    return (\n      <>\n        <Card fullWidth={fullWidth} disabled={disabled}>\n          <Stack\n            flexDirection=\"column\"\n            gap=\"xs\"\n            alignItems=\"flex-start\"\n            marginBlockEnd=\"md\"\n            maxWidth=\"content.maxWidth\"\n          >\n            <Heading as=\"h5\">Intro to Kadena</Heading>\n            <Text>\n              Kadena is the only platform offering a complete decentralized\n              infrastructure for builders. Combining a revolutionary chain\n              architecture with the tools needed for widespread adoption, your\n              teams get the full capabilities of blockchain with the ability to\n              go from concept to launch in days vs. months by not having to\n              build from scratch. Learn about our core concepts.\n            </Text>\n          </Stack>\n          <Button title={'Button'}>Kadena Docs</Button>\n        </Card>\n      </>\n    );\n  },\n};\n"]}
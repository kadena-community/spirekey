{"version":3,"file":"Table.stories.js","sourceRoot":"","sources":["../../../../src/components/Table/Table.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ITableProps } from '@components/Table';\nimport { Table } from '@components/Table';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { vars } from '@theme/vars.css';\nimport React from 'react';\n\nconst selectOptions: (keyof typeof vars.sizes | undefined)[] = [\n  undefined,\n  ...(Object.keys(vars.sizes) as (keyof typeof vars.sizes)[]),\n];\n\ntype StoryProps = {\n  rowCount: number;\n  columnCount: number;\n  striped: boolean;\n  columnWidth: keyof typeof vars.sizes | undefined;\n} & ITableProps;\n\nconst meta: Meta<StoryProps> = {\n  title: 'Content/Table',\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The Table component renders a table element with a head and body. The table can have a visual distinction between rows with the `striped` prop. The column width can be adjusted via `width`, `minWidth`, and `maxWidth` prop applied to the `Table.Th` subcomponent.',\n      },\n    },\n  },\n  argTypes: {\n    rowCount: {\n      control: { type: 'range', min: 1, max: 6, step: 1 },\n    },\n    columnCount: {\n      control: { type: 'range', min: 1, max: 6, step: 1 },\n    },\n    striped: {\n      control: { type: 'boolean' },\n    },\n    columnWidth: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property with pre-defined size values.',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StoryProps>;\n\nexport const Primary: Story = {\n  name: 'Table',\n  args: {\n    rowCount: 3,\n    columnCount: 5,\n    striped: false,\n  },\n  render: ({ rowCount, columnCount, striped }) => {\n    return (\n      <Table.Root striped={striped}>\n        <Table.Head>\n          <Table.Tr>\n            {Array.from(Array(columnCount)).map((id, tdIdx) => {\n              return <Table.Th key={`td${tdIdx}`}>test {tdIdx}</Table.Th>;\n            })}\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>\n          {Array.from(Array(rowCount)).map((id, idx) => {\n            return (\n              <Table.Tr key={`tr${idx}`}>\n                {Array.from(Array(columnCount)).map((id, tdIdx) => {\n                  return <Table.Td key={`td${tdIdx}`}>test {tdIdx}</Table.Td>;\n                })}\n              </Table.Tr>\n            );\n          })}\n        </Table.Body>\n      </Table.Root>\n    );\n  },\n};\n\nexport const LinkTable: Story = {\n  name: 'Table with Link',\n  args: {\n    rowCount: 3,\n    columnCount: 5,\n    striped: false,\n  },\n  render: ({ rowCount, columnCount, striped }) => {\n    return (\n      <Table.Root striped={striped}>\n        <Table.Head>\n          <Table.Tr>\n            {Array.from(Array(columnCount + 1)).map((id, tdIdx) => {\n              return tdIdx === columnCount ? (\n                <Table.Th key={`td${tdIdx}`} />\n              ) : (\n                <Table.Th key={`td${tdIdx}`}>test {tdIdx}</Table.Th>\n              );\n            })}\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>\n          {Array.from(Array(rowCount)).map((id, idx) => {\n            return (\n              <Table.Tr key={`tr${idx}`} url={`#${idx}`}>\n                {Array.from(Array(columnCount)).map((id, tdIdx) => {\n                  return <Table.Td key={`td${tdIdx}`}>test {tdIdx}</Table.Td>;\n                })}\n              </Table.Tr>\n            );\n          })}\n        </Table.Body>\n      </Table.Root>\n    );\n  },\n};\n\nexport const StripedTable: Story = {\n  args: {\n    rowCount: 3,\n    columnCount: 5,\n    striped: true,\n  },\n  render: ({ rowCount, columnCount, striped }) => {\n    return (\n      <Table.Root striped={striped}>\n        <Table.Head>\n          <Table.Tr>\n            {Array.from(Array(columnCount)).map((id, tdIdx) => {\n              return <Table.Th key={`td${tdIdx}`}>test {tdIdx}</Table.Th>;\n            })}\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>\n          {Array.from(Array(rowCount)).map((id, idx) => {\n            return (\n              <Table.Tr key={`tr${idx}`}>\n                {Array.from(Array(columnCount)).map((id, tdIdx) => {\n                  return <Table.Td key={`td${tdIdx}`}>test {tdIdx}</Table.Td>;\n                })}\n              </Table.Tr>\n            );\n          })}\n        </Table.Body>\n      </Table.Root>\n    );\n  },\n};\n\nexport const EmptyRowsTable: Story = {\n  name: 'Table with Empty Rows',\n  args: {\n    rowCount: 5,\n    columnCount: 3,\n    striped: false,\n  },\n  render: ({ striped }) => {\n    return (\n      <Table.Root striped={striped}>\n        <Table.Head>\n          <Table.Tr>\n            <Table.Th>Date Time</Table.Th>\n            <Table.Th>Amount</Table.Th>\n            <Table.Th>Sender</Table.Th>\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>\n          <Table.Tr>\n            <Table.Td>March 28, 2023 - 06:23</Table.Td>\n            <Table.Td>10</Table.Td>\n            <Table.Td>1234</Table.Td>\n          </Table.Tr>\n          <Table.Tr></Table.Tr>\n          <Table.Tr></Table.Tr>\n          <Table.Tr>\n            <Table.Td>March 28, 2023 - 06:23</Table.Td>\n            <Table.Td>10</Table.Td>\n            <Table.Td>1234</Table.Td>\n          </Table.Tr>\n          <Table.Tr></Table.Tr>\n        </Table.Body>\n      </Table.Root>\n    );\n  },\n};\n\nexport const FixedColumnWidth: Story = {\n  name: 'Table with Fixed Column Width',\n  args: {\n    columnWidth: '$32',\n  },\n  render: ({ columnWidth }) => {\n    return (\n      <Table.Root wordBreak=\"break-word\">\n        <Table.Head>\n          <Table.Tr>\n            <Table.Th width={columnWidth}>Fixed Width</Table.Th>\n            <Table.Th>Other Content</Table.Th>\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>\n          <Table.Tr>\n            <Table.Td>Fixed with content</Table.Td>\n            <Table.Td>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industrys standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book. It has\n              survived not only five centuries, but also the leap into\n              electronic typesetting, remaining essentially unchanged. It was\n              popularised in the 1960s with the release of Letraset sheets\n              containing Lorem Ipsum passages, and more recently with desktop\n              publishing software like Aldus PageMaker including versions of\n              Lorem Ipsum.\n            </Table.Td>\n          </Table.Tr>\n        </Table.Body>\n      </Table.Root>\n    );\n  },\n};\n"]}
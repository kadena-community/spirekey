{"version":3,"file":"MaskedValue.stories.js","sourceRoot":"","sources":["../../../../src/components/MaskedValue/MaskedValue.stories.tsx"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAE1B,+CAA4C;AAE5C,MAAM,IAAI,GAA4B;IACpC,KAAK,EAAE,wBAAwB;IAC/B,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,+UAA+U;aAClV;SACF;KACF;IACD,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,iBAAiB,EAAE;YACjB,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;SACF;QACD,mBAAmB,EAAE;YACnB,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,iBAAiB,EAAE;YACjB,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAIP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,aAAa;IACnB,IAAI,EAAE;QACJ,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,oBAAoB;QAC3B,iBAAiB,EAAE,KAAK;QACxB,mBAAmB,EAAE,CAAC;QACtB,iBAAiB,EAAE,CAAC;KACrB;IACD,MAAM,EAAE,CAAC,EACP,KAAK,EACL,KAAK,EACL,iBAAiB,EACjB,mBAAmB,EACnB,iBAAiB,GAClB,EAAE,EAAE;QACH,OAAO,CACL;YACE,8BAAC,yBAAW,IACV,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,EACxC,iBAAiB,EAAE,iBAAiB,GACpC,CACD,CACJ,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport type { IMaskedValueProps } from './MaskedValue';\nimport { MaskedValue } from './MaskedValue';\n\nconst meta: Meta<IMaskedValueProps> = {\n  title: 'Components/MaskedValue',\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'This component will visually render the set value with a mask. The mask will hide part of the value and show a number of asterisks in its stead. The number of unmasked characters can be set with the `startUnmaskedValues` and `endUnmaskedValues` props. The default visibility of the value can be set with the `defaultVisibility` prop.',\n      },\n    },\n  },\n  argTypes: {\n    title: {\n      control: {\n        type: 'text',\n      },\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n    },\n    defaultVisibility: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    startUnmaskedValues: {\n      control: {\n        type: 'number',\n      },\n    },\n    endUnmaskedValues: {\n      control: {\n        type: 'number',\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<IMaskedValueProps>;\n\nexport const Primary: Story = {\n  name: 'MaskedValue',\n  args: {\n    title: 'Account',\n    value: 'k:1234567890abcdef',\n    defaultVisibility: false,\n    startUnmaskedValues: 6,\n    endUnmaskedValues: 4,\n  },\n  render: ({\n    title,\n    value,\n    defaultVisibility,\n    startUnmaskedValues,\n    endUnmaskedValues,\n  }) => {\n    return (\n      <>\n        <MaskedValue\n          title={title}\n          value={value}\n          defaultVisibility={defaultVisibility}\n          startUnmaskedValues={startUnmaskedValues}\n          endUnmaskedValues={endUnmaskedValues}\n        />\n      </>\n    );\n  },\n};\n"]}
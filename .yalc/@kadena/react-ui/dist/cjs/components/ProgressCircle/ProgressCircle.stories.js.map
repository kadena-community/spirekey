{"version":3,"file":"ProgressCircle.stories.js","sourceRoot":"","sources":["../../../../src/components/ProgressCircle/ProgressCircle.stories.tsx"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAC1B,sDAAoD;AAEpD,qDAAkD;AAElD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,sBAAU,EAAE,MAAM,CAAC,IAAI,CAAC,sBAAU,CAAC,CAAC,CAAC;AAC/D,MAAM,IAAI,GAA+B;IACvC,KAAK,EAAE,2BAA2B;IAClC,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,CAAC,eAAe,CAAC;SACxB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,oEAAoE;aACvE;SACF;KACF;IACD,QAAQ,EAAE;QACR,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YAC3B,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,sBAAU,CAAC;YAChC,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAIP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE;QACJ,eAAe,EAAE,KAAK;QACtB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,GAAG;QACb,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,4BAA4B;QACnC,KAAK,EAAE,UAAU;KAClB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QACf,OAAO,8BAAC,+BAAc,OAAK,IAAI,GAAI,CAAC;IACtC,CAAC;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { colorAtoms } from '../../styles/atoms.css';\nimport type { IProgressCircleProps } from './ProgressCircle';\nimport { ProgressCircle } from './ProgressCircle';\n\nconsole.log('colorAtoms', colorAtoms, Object.keys(colorAtoms));\nconst meta: Meta<IProgressCircleProps> = {\n  title: 'Components/ProgressCircle',\n  parameters: {\n    status: {\n      type: ['inDevelopment'],\n    },\n    docs: {\n      description: {\n        component:\n          'A component that shows the completion status of a task or process.',\n      },\n    },\n  },\n  argTypes: {\n    isIndeterminate: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    value: {\n      control: {\n        type: 'number',\n      },\n    },\n    minValue: {\n      control: {\n        type: 'number',\n      },\n    },\n    maxValue: {\n      control: {\n        type: 'number',\n      },\n    },\n    size: {\n      options: ['sm', 'md', 'lg'],\n      control: {\n        type: 'select',\n      },\n    },\n    color: {\n      options: Object.keys(colorAtoms),\n      control: {\n        type: 'select',\n      },\n    },\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<IProgressCircleProps>;\n\nexport const Primary: Story = {\n  name: 'ProgressCircle',\n  args: {\n    isIndeterminate: false,\n    value: 25,\n    minValue: 0,\n    maxValue: 100,\n    size: 'md',\n    color: 'icon.brand.primary.default',\n    label: 'Progress',\n  },\n  render: (args) => {\n    return <ProgressCircle {...args} />;\n  },\n};\n"]}
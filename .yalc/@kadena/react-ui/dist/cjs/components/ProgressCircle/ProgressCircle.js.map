{"version":3,"file":"ProgressCircle.js","sourceRoot":"","sources":["../../../../src/components/ProgressCircle/ProgressCircle.tsx"],"names":[],"mappings":";;;;;;AAAA,6CAA0C;AAC1C,4DAAoC;AACpC,kDAA0B;AAE1B,2CAA4C;AAE5C,sDAA+C;AAE/C,+CAA+C;AAG/C,MAAM,YAAY,GAAG;IACnB,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;CACE,CAAC;AAUX,SAAgB,cAAc,CAAC,KAA2B;;IACxD,MAAM,EAAE,eAAe,EAAE,KAAK,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC;IAC3E,MAAM,CAAC,GAAG,IAAA,aAAK,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC3C,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAA,2BAAc,EAAC;QAC1C,GAAG,KAAK;QACR,KAAK,EAAE,CAAC;KACT,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,IAAI,CAAC;IAChC,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACvC,MAAM,MAAM,GAAG,WAAW,GAAG,CAAC,CAAC;IAC/B,MAAM,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC;IACpC,MAAM,CAAC,GAAG,MAAM,GAAG,WAAW,CAAC;IAC/B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAC1B,MAAM,UAAU,GAAG,eAAe;QAChC,CAAC,CAAC,IAAI;QACN,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;IAElC,OAAO,CACL,0CACM,gBAAgB,KAChB,IAAA,kBAAS,EAAC,KAAK,CAAC,EACpB,SAAS,EAAE,IAAA,oBAAU,EACnB,IAAA,iBAAK,EAAC;YACJ,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAC,EACF,KAAK,CAAC,SAAS,CAChB,EACD,KAAK,EAAE,WAAW,EAClB,MAAM,EAAE,WAAW,EACnB,OAAO,EAAE,OAAO,WAAW,IAAI,WAAW,EAAE,EAC5C,IAAI,EAAC,MAAM,EACX,WAAW,EAAE,WAAW;QAExB,0CAAQ,IAAI,EAAC,cAAc,EAAC,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAC,MAAM,GAAG;QAC1E,6CACM,IAAA,kBAAS,EAAC,KAAK,EAAE,UAAU,CAAC,EAChC,IAAI,EAAC,cAAc,EACnB,EAAE,EAAE,MAAM,EACV,EAAE,EAAE,MAAM,EACV,CAAC,EAAE,CAAC,EACJ,MAAM,EAAC,cAAc,EACrB,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAC5B,gBAAgB,EAAE,MAAM,EACxB,SAAS,EAAE,cAAc,MAAM,IAAI,MAAM,GAAG,IAE3C,KAAK,CAAC,eAAe,IAAI,CACxB,uDACM,IAAA,kBAAS,EAAC,KAAK,EAAE,yBAAyB,CAAC,EAC/C,aAAa,EAAC,WAAW,EACzB,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,IAAI,EACV,GAAG,EAAC,IAAI,EACR,IAAI,EAAE,KAAK,MAAM,IAAI,MAAM,EAAE,EAC7B,EAAE,EAAE,OAAO,MAAM,IAAI,MAAM,EAAE,EAC7B,WAAW,EAAC,YAAY,GACxB,CACH,CACM,CACL,CACP,CAAC;AACJ,CAAC;AA7DD,wCA6DC","sourcesContent":["import { clamp } from '@react-aria/utils';\nimport classNames from 'classnames';\nimport React from 'react';\nimport type { AriaProgressBarProps } from 'react-aria';\nimport { useProgressBar } from 'react-aria';\nimport type { Atoms } from '../../styles/atoms.css';\nimport { atoms } from '../../styles/atoms.css';\nimport type { ITestProps } from '../../utils/testId';\nimport { testProps } from '../../utils/testId';\n\n// eslint-disable-next-line @kadena-dev/typedef-var\nconst SPINNER_SIZE = {\n  sm: 16,\n  md: 24,\n  lg: 32,\n} as const;\n\ntype SpinnerSize = keyof typeof SPINNER_SIZE;\nexport interface IProgressCircleProps extends AriaProgressBarProps, ITestProps {\n  isIndeterminate?: boolean;\n  size?: SpinnerSize;\n  color?: 'currentColor' | Atoms['color'];\n  className?: string;\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, react/function-component-definition\nexport function ProgressCircle(props: IProgressCircleProps) {\n  const { isIndeterminate, value = 0, minValue = 0, maxValue = 100 } = props;\n  const v = clamp(value, minValue, maxValue);\n  const { progressBarProps } = useProgressBar({\n    ...props,\n    value: v,\n  });\n  const size = props.size ?? 'md';\n  const spinnerSize = SPINNER_SIZE[size];\n  const center = spinnerSize / 2;\n  const strokeWidth = spinnerSize / 8;\n  const r = center - strokeWidth;\n  const c = 2 * r * Math.PI;\n  const percentage = isIndeterminate\n    ? 0.25\n    : (v - minValue) / (maxValue - minValue);\n  const offset = c - percentage * c;\n\n  return (\n    <svg\n      {...progressBarProps}\n      {...testProps(props)}\n      className={classNames(\n        atoms({\n          color: props.color,\n        }),\n        props.className,\n      )}\n      width={spinnerSize}\n      height={spinnerSize}\n      viewBox={`0 0 ${spinnerSize} ${spinnerSize}`}\n      fill=\"none\"\n      strokeWidth={strokeWidth}\n    >\n      <circle role=\"presentation\" cx={center} cy={center} r={r} stroke=\"gray\" />\n      <circle\n        {...testProps(props, 'progress')}\n        role=\"presentation\"\n        cx={center}\n        cy={center}\n        r={r}\n        stroke=\"currentColor\"\n        strokeDasharray={`${c} ${c}`}\n        strokeDashoffset={offset}\n        transform={`rotate(-90 ${center} ${center})`}\n      >\n        {props.isIndeterminate && (\n          <animateTransform\n            {...testProps(props, 'indeterminate-animation')}\n            attributeName=\"transform\"\n            type=\"rotate\"\n            begin=\"0s\"\n            dur=\"1s\"\n            from={`0 ${center} ${center}`}\n            to={`360 ${center} ${center}`}\n            repeatCount=\"indefinite\"\n          />\n        )}\n      </circle>\n    </svg>\n  );\n}\n"]}
{"version":3,"file":"Notification.stories.js","sourceRoot":"","sources":["../../../../src/components/Notification/Notification.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { INotificationProps } from '@components/Notification';\nimport {\n  Notification,\n  NotificationButton,\n  NotificationFooter,\n  NotificationHeading,\n} from '@components/Notification';\nimport { withContentWidth } from '@storyDecorators';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { SystemIcon } from '..';\nimport { notificationRecipe } from './Notification.css';\n\n// eslint-disable-next-line @kadena-dev/typedef-var\nconst intentVariants = Object.keys(\n  (notificationRecipe as any).classNames?.variants?.intent,\n) as INotificationProps['intent'][];\n\n// eslint-disable-next-line @kadena-dev/typedef-var\nconst displayStyleVariant = Object.keys(\n  (notificationRecipe as any).classNames?.variants?.displayStyle,\n) as INotificationProps['displayStyle'][];\n\ntype StoryType = {\n  heading: string;\n} & INotificationProps;\n\nconst meta: Meta<StoryType> = {\n  title: 'Components/Notification',\n  decorators: [withContentWidth],\n  parameters: {\n    status: {\n      type: ['inDevelopment'],\n    },\n    docs: {\n      description: {\n        component:\n          'The Notification component renders a notification with an icon, heading, body, and action buttons. This component is used to announce dynamic changes in the content of a live region by asserting a discreet alert or notification. The appropriate role should be used to ensure that assistive technologies announce these dynamic changes. In the case where a user wants to use the Notification component purely for visual purposes, the role can be set to `none`.',\n      },\n    },\n  },\n  argTypes: {\n    displayStyle: {\n      options: displayStyleVariant,\n      control: {\n        type: 'select',\n      },\n      description:\n        'The Notification component has bordered and borderless variants. The borderless variant is used for notifications that located within a card or content body, while the bordered variant can be used in all other cases. ',\n      table: {\n        type: { summary: displayStyleVariant.join(' | ') },\n        defaultValue: { summary: 'default' },\n      },\n    },\n    intent: {\n      options: intentVariants,\n      control: {\n        type: 'select',\n      },\n      description: 'Notification intent color',\n      table: {\n        type: { summary: intentVariants.join(' | ') },\n        defaultValue: { summary: 'default' },\n      },\n    },\n    isDismissable: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    children: {\n      control: {\n        type: 'text',\n      },\n    },\n    role: {\n      description:\n        \"The Notification component has a role attribute that can be set to 'alert', 'status', or 'none'.\",\n      options: ['alert', 'status', 'none'],\n      control: {\n        type: 'select',\n      },\n      table: {\n        defaultValue: { summary: 'status' },\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StoryType>;\n\nexport const Primary: Story = {\n  name: 'Notification',\n  args: {\n    heading: 'Notification Heading',\n    isDismissable: true,\n    intent: undefined,\n    children:\n      'Notification children to inform users about the event that occurred!',\n    displayStyle: 'bordered',\n  },\n  render: ({ heading, isDismissable, intent, children, displayStyle }) => {\n    return (\n      <Notification\n        intent={intent}\n        isDismissable={isDismissable}\n        onDismiss={() => {\n          alert('Close button clicked');\n        }}\n        displayStyle={displayStyle}\n        role=\"none\"\n      >\n        <NotificationHeading>{heading}</NotificationHeading>\n        {children}\n        <NotificationFooter>\n          <NotificationButton intent=\"positive\" icon={<SystemIcon.Check />}>\n            Accept\n          </NotificationButton>\n          <NotificationButton intent=\"negative\" icon={<SystemIcon.Close />}>\n            Reject\n          </NotificationButton>\n        </NotificationFooter>\n      </Notification>\n    );\n  },\n};\n"]}
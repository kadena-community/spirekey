{"version":3,"file":"Input.js","sourceRoot":"","sources":["../../../../../src/components/Form/Input/Input.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA8C;AAE9C,4DAAoC;AAEpC,+CAAsD;AACtD,0CAAoE;AACpE,2FAAuF;AACvF,2CAQqB;AAiBR,QAAA,KAAK,GAAoB,IAAA,kBAAU,EAC9C,SAAS,KAAK,CACZ,EACE,QAAQ,EACR,WAAW,EACX,IAAI,EACJ,gBAAgB,EAAE,oBAAoB,EACtC,QAAQ,GAAG,KAAK,EAChB,QAAQ,EACR,GAAG,IAAI,EACR,EACD,GAAG;IAEH,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,uBAAuB,EAAE,GAAG,IAAA,kBAAU,EACtE,kDAAuB,CACxB,CAAC;IACF,MAAM,gBAAgB,GAAG,oBAAoB,IAAI,uBAAuB,CAAC;IACzE,MAAM,IAAI,GAAG,IAAI,IAAI,iBAAU,CAAC,IAAI,CAAC,CAAC;IAEtC,OAAO,CACL,uCACE,SAAS,EAAE,IAAA,oBAAU,EAAC,6BAAkB,EAAE;YACxC,CAAC,4BAAiB,CAAC,EAAE,QAAQ,IAAI,MAAM;YACvC,CAAC,yBAAa,CAAC,EAAE,QAAQ;SAC1B,CAAC;QAED,OAAO,CAAC,WAAW,CAAC,IAAI,CACvB,uCACE,SAAS,EAAE,IAAA,oBAAU,EACnB,mCAAuB,EACvB,gBAAgB,IAAI,mCAAuB,CAAC,gBAAgB,CAAC,CAC9D;YAED,wCAAM,SAAS,EAAE,4BAAgB,IAAG,WAAW,CAAQ,CACnD,CACP;QACD,uCAAK,SAAS,EAAE,+BAAmB;YAChC,IAAI,IAAI,8BAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG;YAC3B,yCACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,sBAAU,EACrB,QAAQ,EAAE,QAAQ,KACd,IAAI,GACR;YACD,QAAQ,IAAI,uCAAK,SAAS,EAAE,8BAAkB,IAAG,QAAQ,CAAO,CAC7D,CACF,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport type { vars } from '@theme/vars.css';\nimport classNames from 'classnames';\nimport type { FC, InputHTMLAttributes } from 'react';\nimport React, { forwardRef, useContext } from 'react';\nimport { baseContainerClass, baseOutlinedClass } from '../Form.css';\nimport { FormFieldWrapperContext } from '../FormFieldWrapper/FormFieldWrapper.context';\nimport {\n  disabledClass,\n  inputChildrenClass,\n  inputClass,\n  inputContainerClass,\n  leadingTextClass,\n  leadingTextWidthVariant,\n  leadingTextWrapperClass,\n} from './Input.css';\n\nexport interface IInputProps\n  extends Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'as' | 'disabled' | 'className' | 'id'\n  > {\n  leadingText?: string;\n  icon?: keyof typeof SystemIcon;\n  leadingTextWidth?: keyof typeof vars.sizes;\n  disabled?: boolean;\n  type?: React.HTMLInputTypeAttribute;\n  ref?: React.ForwardedRef<HTMLInputElement>;\n  id: string;\n  outlined?: boolean;\n}\n\nexport const Input: FC<IInputProps> = forwardRef<HTMLInputElement, IInputProps>(\n  function Input(\n    {\n      outlined,\n      leadingText,\n      icon,\n      leadingTextWidth: propLeadingTextWidth,\n      disabled = false,\n      children,\n      ...rest\n    },\n    ref,\n  ) {\n    const { status, leadingTextWidth: wrapperLeadingTextWidth } = useContext(\n      FormFieldWrapperContext,\n    );\n    const leadingTextWidth = propLeadingTextWidth || wrapperLeadingTextWidth;\n    const Icon = icon && SystemIcon[icon];\n\n    return (\n      <div\n        className={classNames(baseContainerClass, {\n          [baseOutlinedClass]: outlined || status,\n          [disabledClass]: disabled,\n        })}\n      >\n        {Boolean(leadingText) && (\n          <div\n            className={classNames(\n              leadingTextWrapperClass,\n              leadingTextWidth && leadingTextWidthVariant[leadingTextWidth],\n            )}\n          >\n            <span className={leadingTextClass}>{leadingText}</span>\n          </div>\n        )}\n        <div className={inputContainerClass}>\n          {Icon && <Icon size=\"md\" />}\n          <input\n            ref={ref}\n            className={inputClass}\n            disabled={disabled}\n            {...rest}\n          />\n          {children && <div className={inputChildrenClass}>{children}</div>}\n        </div>\n      </div>\n    );\n  },\n);\n"]}
{"version":3,"file":"TextField.js","sourceRoot":"","sources":["../../../../../src/components/Form/TextField/TextField.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,2CAAyC;AAEzC,+CAA0C;AAC1C,0DAAuE;AACvE,mFAAyE;AAM5D,QAAA,SAAS,GAAwB,IAAA,kBAAU,EAGtD,SAAS,SAAS,CAClB,EAAE,QAAQ,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,UAAU,EAAE,EAC7E,GAAG;IAEH,MAAM,SAAS,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;IAE1D,OAAO,CACL,uCAAK,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,oCAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;QAC7D,KAAK,KAAK,SAAS,IAAI,CACtB,8BAAC,kCAAe,IAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,GAAI,CACrE;QACD,8BAAC,YAAK,IAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,KAAM,UAAU,GAAI;QAC9D,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,8BAAC,kCAAe,QAAE,UAAU,CAAmB,CAChD;QACA,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,8BAAC,kCAAe,QAAE,UAAU,CAAmB,CAChD,CACG,CACP,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IFormFieldWrapperProps, IInputProps } from '@components/Form';\nimport { Input } from '@components/Form';\nimport type { FC } from 'react';\nimport React, { forwardRef } from 'react';\nimport { FormFieldHeader, FormFieldHelper } from '../FormFieldWrapper';\nimport { statusVariant } from '../FormFieldWrapper/FormFieldWrapper.css';\n\nexport interface ITextFieldProps\n  extends Omit<IFormFieldWrapperProps, 'children' | 'htmlFor'>,\n    Omit<IInputProps, 'disabled' | 'children'> {}\n\nexport const TextField: FC<ITextFieldProps> = forwardRef<\n  HTMLInputElement,\n  ITextFieldProps\n>(function TextField(\n  { disabled = false, status, id, label, info, tag, helperText, ...inputProps },\n  ref,\n) {\n  const statusVal = disabled === true ? 'disabled' : status;\n\n  return (\n    <div className={statusVal ? statusVariant[statusVal] : undefined}>\n      {label !== undefined && (\n        <FormFieldHeader htmlFor={id} label={label} tag={tag} info={info} />\n      )}\n      <Input ref={ref} disabled={disabled} id={id} {...inputProps} />\n      {Boolean(helperText) && status !== 'negative' && (\n        <FormFieldHelper>{helperText}</FormFieldHelper>\n      )}\n      {Boolean(helperText) && status === 'negative' && (\n        <FormFieldHelper>{helperText}</FormFieldHelper>\n      )}\n    </div>\n  );\n});\n"]}
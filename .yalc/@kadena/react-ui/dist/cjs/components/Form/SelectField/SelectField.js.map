{"version":3,"file":"SelectField.js","sourceRoot":"","sources":["../../../../../src/components/Form/SelectField/SelectField.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,2CAA0C;AAE1C,+CAA0C;AAC1C,0DAAuE;AACvE,mFAAyE;AAM5D,QAAA,WAAW,GAA0B,IAAA,kBAAU,EAG1D,SAAS,WAAW,CACpB,EACE,QAAQ,GAAG,KAAK,EAChB,EAAE,EACF,QAAQ,EACR,UAAU,EACV,KAAK,EACL,MAAM,EACN,GAAG,EACH,IAAI,EACJ,GAAG,IAAI,EACR,EACD,GAAG;IAEH,MAAM,SAAS,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;IAE1D,OAAO,CACL;QACE,uCAAK,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,oCAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7D,KAAK,KAAK,SAAS,IAAI,CACtB,8BAAC,kCAAe,IAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,GAAI,CACrE;YAED,8BAAC,aAAM,IAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,KAAM,IAAI,IACnD,QAAQ,CACF;YAER,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,8BAAC,kCAAe,QAAE,UAAU,CAAmB,CAChD;YACA,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,8BAAC,kCAAe,QAAE,UAAU,CAAmB,CAChD,CACG,CACL,CACJ,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IFormFieldWrapperProps, ISelectProps } from '@components/Form';\nimport { Select } from '@components/Form';\nimport type { FC } from 'react';\nimport React, { forwardRef } from 'react';\nimport { FormFieldHeader, FormFieldHelper } from '../FormFieldWrapper';\nimport { statusVariant } from '../FormFieldWrapper/FormFieldWrapper.css';\n\nexport interface ISelectFieldProps\n  extends Omit<IFormFieldWrapperProps, 'htmlFor'>,\n    Omit<ISelectProps, 'disabled' | 'children'> {}\n\nexport const SelectField: FC<ISelectFieldProps> = forwardRef<\n  HTMLSelectElement,\n  ISelectFieldProps\n>(function SelectField(\n  {\n    disabled = false,\n    id,\n    children,\n    helperText,\n    label,\n    status,\n    tag,\n    info,\n    ...rest\n  },\n  ref,\n) {\n  const statusVal = disabled === true ? 'disabled' : status;\n\n  return (\n    <>\n      <div className={statusVal ? statusVariant[statusVal] : undefined}>\n        {label !== undefined && (\n          <FormFieldHeader htmlFor={id} label={label} tag={tag} info={info} />\n        )}\n\n        <Select ref={ref} id={id} disabled={disabled} {...rest}>\n          {children}\n        </Select>\n\n        {Boolean(helperText) && status !== 'negative' && (\n          <FormFieldHelper>{helperText}</FormFieldHelper>\n        )}\n        {Boolean(helperText) && status === 'negative' && (\n          <FormFieldHelper>{helperText}</FormFieldHelper>\n        )}\n      </div>\n    </>\n  );\n});\n"]}
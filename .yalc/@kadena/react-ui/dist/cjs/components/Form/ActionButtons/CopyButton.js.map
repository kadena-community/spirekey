{"version":3,"file":"CopyButton.js","sourceRoot":"","sources":["../../../../../src/components/Form/ActionButtons/CopyButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA8C;AAE9C,+CAAwC;AACxC,qDAA+C;AAE/C,MAAM,kBAAkB,GAAW,IAAI,CAAC;AAUjC,MAAM,UAAU,GAAyB,CAAC,EAAE,KAAK,EAAE,GAAG,SAAS,EAAE,EAAE,EAAE;IAC1E,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAU,KAAK,CAAC,CAAC;IAEnD,MAAM,WAAW,GAAG,KAAK,IAAmB,EAAE;QAC5C,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,UAAU,CAAC,GAAG,EAAE;YACd,QAAQ,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,EAAE,kBAAkB,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,MAAM,SAAS,GAAG,iBAAU,CAAC,KAAK,CAAC;IACnC,MAAM,eAAe,GAAG,iBAAU,CAAC,WAAW,CAAC;IAE/C,OAAO,CACL,6CACM,SAAS,gBACD,aAAa,EACzB,OAAO,EAAE,WAAW,EACpB,SAAS,EAAE,4BAAW,IAErB,KAAK,CAAC,CAAC,CAAC,8BAAC,SAAS,IAAC,IAAI,EAAC,IAAI,GAAG,CAAC,CAAC,CAAC,8BAAC,eAAe,IAAC,IAAI,EAAC,IAAI,GAAG,CACzD,CACV,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,UAAU,cAwBrB","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\nimport { buttonClass } from './CopyButton.css';\n\nconst COPY_DURATION_TIME: number = 1000;\n\nexport interface ICopyButtonProps\n  extends Omit<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    'color' | 'className'\n  > {\n  value: string;\n}\n\nexport const CopyButton: FC<ICopyButtonProps> = ({ value, ...restProps }) => {\n  const [click, setClick] = useState<boolean>(false);\n\n  const handleClick = async (): Promise<void> => {\n    await navigator.clipboard.writeText(value);\n    setClick(true);\n    setTimeout(() => {\n      setClick(false);\n    }, COPY_DURATION_TIME);\n  };\n\n  const CheckIcon = SystemIcon.Check;\n  const ContentCopyIcon = SystemIcon.ContentCopy;\n\n  return (\n    <button\n      {...restProps}\n      aria-label={'ContentCopy'}\n      onClick={handleClick}\n      className={buttonClass}\n    >\n      {click ? <CheckIcon size=\"sm\" /> : <ContentCopyIcon size=\"sm\" />}\n    </button>\n  );\n};\n"]}
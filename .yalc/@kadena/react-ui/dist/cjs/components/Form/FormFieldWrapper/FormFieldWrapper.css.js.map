{"version":3,"file":"FormFieldWrapper.css.js","sourceRoot":"","sources":["../../../../../src/components/Form/FormFieldWrapper/FormFieldWrapper.css.ts"],"names":[],"mappings":";;;AAAA,gDAAyC;AACzC,6DAAoD;AACpD,8CAAqD;AACrD,0CAA8D;AAC9D,+EAG+C;AAE/C,MAAM,aAAa,GAAG;IACpB,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;CACZ,CAAC;AAEE,QAAA,aAAa,GAAG,IAAA,mBAAa,EAAC,aAAa,EAAE,CAAC,MAAM,EAAE,EAAE;;IACnE,IAAI,MAAM,KAAK,UAAU,EAAE;QACzB,OAAO,CAAC,IAAA,iBAAK,EAAC,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;KAC7D;IAED,OAAO;QACL,IAAI,EAAE;YACJ,CAAC,qCAAe,CAAC,EACf,MAAA,qBAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0CAAE,OAAO;YAC5D,CAAC,sBAAW,CAAC,EACX,MAAA,qBAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,0CAAG,QAAQ,CAAC;YACjE,CAAC,6BAAkB,CAAC,EAClB,MAAA,qBAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,0CAAE,MAAM;YAC7D,CAAC,qCAAe,CAAC,EACf,MAAA,qBAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0CAAE,OAAO;SAC7D;KACF,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { atoms } from '@theme/atoms.css';\nimport { tokens } from '@theme/tokens/contract.css';\nimport { styleVariants } from '@vanilla-extract/css';\nimport { statusColor, statusOutlineColor } from '../Form.css';\nimport {\n  helperIconColor,\n  helperTextColor,\n} from './FormFieldHelper/FormFieldHelper.css';\n\nconst statusOptions = {\n  disabled: 'disabled',\n  positive: 'positive',\n  warning: 'warning',\n  negative: 'negative',\n} as const;\n\nexport const statusVariant = styleVariants(statusOptions, (status) => {\n  if (status === 'disabled') {\n    return [atoms({ pointerEvents: 'none' }), { opacity: 0.4 }];\n  }\n\n  return {\n    vars: {\n      [helperIconColor]:\n        tokens.kda.foundation.color.icon.semantic[status]?.default,\n      [statusColor]:\n        tokens.kda.foundation.color.border.semantic[status]?.['@focus'],\n      [statusOutlineColor]:\n        tokens.kda.foundation.color.border.semantic[status]?.subtle,\n      [helperTextColor]:\n        tokens.kda.foundation.color.text.semantic[status]?.default,\n    },\n  };\n});\n"]}
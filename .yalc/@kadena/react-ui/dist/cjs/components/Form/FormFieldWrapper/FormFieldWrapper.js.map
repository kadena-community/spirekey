{"version":3,"file":"FormFieldWrapper.js","sourceRoot":"","sources":["../../../../../src/components/Form/FormFieldWrapper/FormFieldWrapper.tsx"],"names":[],"mappings":";;;;;;AAMA,kDAA0B;AAI1B,+CAA2C;AAE3C,uEAAoE;AACpE,uEAAoE;AACpE,yEAAqE;AACrE,iEAAuD;AAchD,MAAM,gBAAgB,GAA+B,CAAC,EAC3D,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,gBAAgB,GAAG,SAAS,EAC5B,OAAO,EACP,GAAG,EACH,IAAI,EACJ,UAAU,GACX,EAAE,EAAE;IACH,MAAM,SAAS,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;IAE1D,OAAO,CACL,8BAAC,kDAAuB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,MAAM,EAAE,gBAAgB,EAAE;QACnE,uCAAK,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,oCAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7D,KAAK,KAAK,SAAS,IAAI,CACtB,8BAAC,iCAAe,IACd,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,GACV,CACH;YACD,8BAAC,cAAK,IAAC,GAAG,EAAC,IAAI,EAAC,aAAa,EAAC,QAAQ,IACnC,QAAQ,CACH;YACP,OAAO,CAAC,UAAU,CAAC,IAAI,8BAAC,iCAAe,QAAE,UAAU,CAAmB,CACnE,CAC2B,CACpC,CAAC;AACJ,CAAC,CAAC;AA/BW,QAAA,gBAAgB,oBA+B3B","sourcesContent":["import type {\n  IInputProps,\n  ISelectProps,\n  ITextareaProps,\n} from '@components/Form';\nimport type { FC, FunctionComponentElement } from 'react';\nimport React from 'react';\nimport type { vars } from 'src/styles';\nimport type { FormFieldStatus } from '../Form.css';\n\nimport { Stack } from '@components/Layout';\nimport type { IFormFieldHeaderProps } from './FormFieldHeader/FormFieldHeader';\nimport { FormFieldHeader } from './FormFieldHeader/FormFieldHeader';\nimport { FormFieldHelper } from './FormFieldHelper/FormFieldHelper';\nimport { FormFieldWrapperContext } from './FormFieldWrapper.context';\nimport { statusVariant } from './FormFieldWrapper.css';\n\nexport interface IFormFieldWrapperProps\n  extends Omit<IFormFieldHeaderProps, 'label'> {\n  children:\n    | FunctionComponentElement<IInputProps | ISelectProps | ITextareaProps>\n    | FunctionComponentElement<IInputProps | ISelectProps | ITextareaProps>[];\n  status?: FormFieldStatus;\n  disabled?: boolean;\n  helperText?: string;\n  label?: string;\n  leadingTextWidth?: keyof typeof vars.sizes;\n}\n\nexport const FormFieldWrapper: FC<IFormFieldWrapperProps> = ({\n  status,\n  disabled,\n  children,\n  label,\n  leadingTextWidth = undefined,\n  htmlFor,\n  tag,\n  info,\n  helperText,\n}) => {\n  const statusVal = disabled === true ? 'disabled' : status;\n\n  return (\n    <FormFieldWrapperContext.Provider value={{ status, leadingTextWidth }}>\n      <div className={statusVal ? statusVariant[statusVal] : undefined}>\n        {label !== undefined && (\n          <FormFieldHeader\n            htmlFor={htmlFor}\n            label={label}\n            tag={tag}\n            info={info}\n          />\n        )}\n        <Stack gap=\"xs\" flexDirection=\"column\">\n          {children}\n        </Stack>\n        {Boolean(helperText) && <FormFieldHelper>{helperText}</FormFieldHelper>}\n      </div>\n    </FormFieldWrapperContext.Provider>\n  );\n};\n"]}
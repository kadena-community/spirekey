{"version":3,"file":"IconButton.js","sourceRoot":"","sources":["../../../../src/components/IconButton/IconButton.tsx"],"names":[],"mappings":";;;;;;AAAA,2CAA8C;AAC9C,4DAAoC;AAEpC,kDAA0B;AAE1B,qDAK0B;AAoBnB,MAAM,UAAU,GAAyB,CAAC,EAC/C,EAAE,GAAG,QAAQ,EACb,KAAK,GAAG,SAAS,EACjB,OAAO,GAAG,SAAS,EACnB,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,MAAM,EACN,IAAI,EACJ,OAAO,GAAG,KAAK,EACf,MAAM,GAAG,KAAK,EACd,GAAG,SAAS,EACb,EAAE,EAAE;;IACH,MAAM,SAAS,GAAG,MAAA,SAAS,CAAC,YAAY,CAAC,mCAAI,KAAK,CAAC;IACnD,MAAM,cAAc,GAAG,EAAE,KAAK,GAAG,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,CAAC;IAEvE,MAAM,IAAI,GAAG,IAAI,IAAI,iBAAU,CAAC,IAAI,CAAC,CAAC;IAEtC,MAAM,aAAa,GAAG,GAAW,EAAE;QACjC,QAAQ,OAAO,EAAE;YACf,KAAK,SAAS;gBACZ,OAAO,+BAAc,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAK,aAAa;gBAChB,OAAO,mCAAkB,CAAC,KAAK,CAAC,CAAC;YACnC;gBACE,OAAO,+BAAc,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,IAAA,oBAAU,EAAC,aAAa,EAAE,EAAE;QAClD,CAAC,4BAAW,CAAC,EAAE,MAAM;KACtB,CAAC,CAAC;IAEH,IAAI,OAAO,IAAI,eAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC7C,OAAO,eAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;YAClC,GAAG,SAAS;YACZ,IAAI;YACJ,SAAS;YACT,IAAI;YACJ,GAAG,QAAQ,CAAC,KAAK;YACjB,SAAS,EAAE,eAAe;YAC1B,QAAQ,EAAE,8BAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG;SAC7B,CAAC,CAAC;KACJ;IAED,IAAI,cAAc,EAAE;QAClB,OAAO,CACL,qCACE,SAAS,EAAE,eAAe,EAC1B,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,gBACF,SAAS;YAErB,8BAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG,CAChB,CACL,CAAC;KACH;IAED,OAAO,CACL,6CACM,SAAS,EACb,SAAS,EAAE,eAAe,gBACd,SAAS,iBACT,iBAAiB,EAC7B,IAAI,EAAE,IAAI;QAEV,8BAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG,CACX,CACV,CAAC;AACJ,CAAC,CAAC;AAtEW,QAAA,UAAU,cAsErB","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport classnames from 'classnames';\nimport type { FC } from 'react';\nimport React from 'react';\nimport type { colorVariants, typeVariants } from './IconButton.css';\nimport {\n  activeClass,\n  alternativeVariant,\n  compactVariant,\n  defaultVariant,\n} from './IconButton.css';\n\nexport interface IIconButtonProps\n  extends Omit<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    'color' | 'className'\n  > {\n  active?: boolean;\n  as?: 'button' | 'a';\n  asChild?: boolean;\n  color?: keyof typeof colorVariants;\n  href?: string;\n  icon: keyof typeof SystemIcon;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  target?: '_blank' | '_self';\n  title?: string;\n  type?: 'button' | 'submit' | 'reset';\n  variant?: keyof typeof typeVariants;\n}\n\nexport const IconButton: FC<IIconButtonProps> = ({\n  as = 'button',\n  color = 'primary',\n  variant = 'compact',\n  href,\n  icon,\n  title,\n  children,\n  target,\n  type,\n  asChild = false,\n  active = false,\n  ...restProps\n}) => {\n  const ariaLabel = restProps['aria-label'] ?? title;\n  const renderAsAnchor = as === 'a' && href !== undefined && href !== '';\n\n  const Icon = icon && SystemIcon[icon];\n\n  const buttonVariant = (): string => {\n    switch (variant) {\n      case 'compact':\n        return compactVariant[color];\n      case 'alternative':\n        return alternativeVariant[color];\n      default:\n        return defaultVariant[color];\n    }\n  };\n\n  const buttonClassname = classnames(buttonVariant(), {\n    [activeClass]: active,\n  });\n\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...restProps,\n      href,\n      ariaLabel,\n      type,\n      ...children.props,\n      className: buttonClassname,\n      children: <Icon size=\"md\" />,\n    });\n  }\n\n  if (renderAsAnchor) {\n    return (\n      <a\n        className={buttonClassname}\n        href={href}\n        target={target}\n        aria-label={ariaLabel}\n      >\n        <Icon size=\"md\" />\n      </a>\n    );\n  }\n\n  return (\n    <button\n      {...restProps}\n      className={buttonClassname}\n      aria-label={ariaLabel}\n      data-testid=\"kda-icon-button\"\n      type={type}\n    >\n      <Icon size=\"md\" />\n    </button>\n  );\n};\n"]}
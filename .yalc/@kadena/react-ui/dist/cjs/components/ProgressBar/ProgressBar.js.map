{"version":3,"file":"ProgressBar.js","sourceRoot":"","sources":["../../../../src/components/ProgressBar/ProgressBar.tsx"],"names":[],"mappings":";;;;;;AAAA,4DAAoC;AAEpC,kDAA0B;AAC1B,uDAW2B;AAWpB,MAAM,WAAW,GAA0B,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;IACpE,OAAO,CACL,uCAAK,SAAS,EAAE,kCAAgB,iBAAc,kBAAkB;QAC9D,uCAAK,SAAS,EAAE,yCAAuB,IACpC,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE;YACrC,OAAO,CACL;gBACE,uCACE,SAAS,EAAE,0CAAwB,EACnC,GAAG,EAAE,KAAK,iBACG,4BAA4B,KAAK,EAAE;oBAEhD,uCAAK,SAAS,EAAE,IAAA,oBAAU,EAAC,0CAAwB,CAAC;wBAClD,uCACE,SAAS,EAAE,IAAA,oBAAU,EACnB,6BAAW,EACX,oCAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,CACtC,GACD;wBACD,KAAK,KAAK,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAClC,uCACE,SAAS,EAAE,IAAA,oBAAU,EACnB,2BAAS,EACT,kCAAgB,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAChD,GACD,CACH,CAAC,CAAC,CAAC,IAAI,CACJ;oBACN,uCACE,SAAS,EAAE,IAAA,oBAAU,EACnB,oCAAkB,EAClB,kCAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CACpC,IAEA,UAAU,CAAC,KAAK,CACb,CACF,CACL,CACJ,CAAC;QACJ,CAAC,CAAC,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AA3CW,QAAA,WAAW,eA2CtB","sourcesContent":["import classNames from 'classnames';\nimport type { FC } from 'react';\nimport React from 'react';\nimport {\n  checkpointContainerStyle,\n  circleColorVariant,\n  circleLineContainerStyle,\n  circleStyle,\n  lineColorVariant,\n  lineStyle,\n  progressBarContentStyle,\n  progressBarStyle,\n  textColorVariant,\n  textContainerStyle,\n} from './ProgressBar.css';\n\nexport interface IProgressBarProps {\n  checkpoints: ICheckpoint[];\n}\n\nexport interface ICheckpoint {\n  title: string;\n  status: 'complete' | 'pending' | 'incomplete';\n}\n\nexport const ProgressBar: FC<IProgressBarProps> = ({ checkpoints }) => {\n  return (\n    <div className={progressBarStyle} data-testid=\"kda-progress-bar\">\n      <div className={progressBarContentStyle}>\n        {checkpoints.map((checkpoint, index) => {\n          return (\n            <>\n              <div\n                className={checkpointContainerStyle}\n                key={index}\n                data-testid={`kda-checkpoint-container-${index}`}\n              >\n                <div className={classNames(circleLineContainerStyle)}>\n                  <div\n                    className={classNames(\n                      circleStyle,\n                      circleColorVariant[checkpoint.status],\n                    )}\n                  />\n                  {index !== checkpoints.length - 1 ? (\n                    <div\n                      className={classNames(\n                        lineStyle,\n                        lineColorVariant[checkpoints[index + 1].status],\n                      )}\n                    />\n                  ) : null}\n                </div>\n                <div\n                  className={classNames(\n                    textContainerStyle,\n                    textColorVariant[checkpoint.status],\n                  )}\n                >\n                  {checkpoint.title}\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"]}
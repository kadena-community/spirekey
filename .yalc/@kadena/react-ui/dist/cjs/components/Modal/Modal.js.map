{"version":3,"file":"Modal.js","sourceRoot":"","sources":["../../../../src/components/Modal/Modal.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,6CAA8C;AAE9C,+CAAoD;AAEpD,2CAAsD;AAEtD,2CAA4C;AAYrC,MAAM,KAAK,GAAoB,CAAC,EACrC,QAAQ,EACR,KAAK,EACL,aAAa,GAAG,IAAI,EACpB,yBAAyB,GAC1B,EAAE,EAAE;IACH,MAAM,OAAO,GAAG,IAAA,cAAM,EAAwB,IAAI,CAAC,CAAC;IACpD,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAA,4BAAe,EACnD;QACE,aAAa;QACb,yBAAyB;KAC1B,EACD,KAAK,EACL,OAAO,CACR,CAAC;IAEF,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;QACjB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,8BAAC,oBAAO;QACN,uCAAK,SAAS,EAAE,yBAAa,KAAM,aAAa,IAC7C,OAAO,QAAQ,KAAK,UAAU;YAC7B,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC;YAC/B,CAAC,CAAC,IAAA,oBAAY,EAAC,QAAQ,EAAE;gBACrB,GAAG,QAAQ,CAAC,KAAK;gBACjB,GAAG,UAAU;gBAEb,GAAG,EAAE,IAAA,iBAAS,EAAC,OAAO,EAAG,QAAgB,CAAC,GAAG,CAAC;aAC/C,CAAC,CACF,CACE,CACX,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,KAAK,SAkChB","sourcesContent":["'use client';\n\nimport { mergeRefs } from '@react-aria/utils';\nimport type { FC, ReactElement, Ref } from 'react';\nimport React, { cloneElement, useRef } from 'react';\nimport type { AriaModalOverlayProps, ModalOverlayAria } from 'react-aria';\nimport { Overlay, useModalOverlay } from 'react-aria';\nimport type { OverlayTriggerState } from 'react-stately';\nimport { underlayClass } from './Modal.css';\n\nexport interface IModalProps extends AriaModalOverlayProps {\n  state: OverlayTriggerState;\n  children:\n    | ReactElement\n    | ((\n        modalProps: ModalOverlayAria['modalProps'],\n        ref: Ref<HTMLDivElement>,\n      ) => ReactElement);\n}\n\nexport const Modal: FC<IModalProps> = ({\n  children,\n  state,\n  isDismissable = true,\n  isKeyboardDismissDisabled,\n}) => {\n  const nodeRef = useRef<HTMLDivElement | null>(null);\n  const { modalProps, underlayProps } = useModalOverlay(\n    {\n      isDismissable,\n      isKeyboardDismissDisabled,\n    },\n    state,\n    nodeRef,\n  );\n\n  if (!state.isOpen) {\n    return null;\n  }\n\n  return (\n    <Overlay>\n      <div className={underlayClass} {...underlayProps}>\n        {typeof children === 'function'\n          ? children(modalProps, nodeRef)\n          : cloneElement(children, {\n              ...children.props,\n              ...modalProps,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              ref: mergeRefs(nodeRef, (children as any).ref),\n            })}\n      </div>\n    </Overlay>\n  );\n};\n"]}
{"version":3,"file":"Tabs.stories.js","sourceRoot":"","sources":["../../../../src/components/Tabs/Tabs.stories.tsx"],"names":[],"mappings":";;;;;;AACA,2CAAwC;AACxC,2DAAwD;AAExD,gEAA6D;AAC7D,kDAA0B;AAE1B,MAAM,WAAW,GAAa;IAC5B,QAAQ;IACR,UAAU;IACV,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;CACd,CAAC;AAEF,MAAM,IAAI,GAIN;IACF,KAAK,EAAE,aAAa;IACpB,UAAU,EAAE,CAAC,qCAAiB,CAAC;IAC/B,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,qXAAqX;aACxX;SACF;KACF;IACD,SAAS,EAAE,WAAI,CAAC,IAAI;IACpB,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YACnD,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;aAC5B;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE;gBACP,GAAG,CAAC,GAAG,CAAC;gBACR,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;aACE;YACjC,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;YACD,WAAW,EACT,iIAAiI;YACnI,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE;aACxC;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE;gBACP,GAAG,CAAC,SAAS,CAAC;gBACd,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;aACE;YACjC,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;YACD,WAAW,EACT,8GAA8G;YAChH,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE;aACxC;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAGP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE;QACJ,UAAU,EAAE,CAAC;QACb,UAAU,EAAE,UAAU;QACtB,UAAU,EAAE,SAAS;KACtB;IACD,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE;QACjD,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAE9C,OAAO,CACL;YACE,8BAAC,WAAI,CAAC,IAAI,IAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;gBACtD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;oBAChB,OAAO,CACL,8BAAC,WAAI,CAAC,GAAG,IAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,IACxB,GAAG,CACK,CACZ,CAAC;gBACJ,CAAC,CAAC;gBAED,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;oBAChB,OAAO,CACL,8BAAC,WAAI,CAAC,OAAO,IAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;wBAC7B,8BAAC,WAAI;;4BAAwB,GAAG;gCAAc,CACjC,CAChB,CAAC;gBACJ,CAAC,CAAC,CACQ,CACX,CACJ,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import type { ITabsContainerProps } from '@components/Tabs';\nimport { Tabs } from '@components/Tabs';\nimport { Text } from '@components/Typography/Text/Text';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { withCenteredStory } from '@utils/withCenteredStory';\nimport React from 'react';\n\nconst ExampleTabs: string[] = [\n  'He-man',\n  'Skeletor',\n  'Orko',\n  'Teela-Na',\n  'Cringer',\n  'King Randor',\n];\n\nconst meta: Meta<\n  ITabsContainerProps & {\n    itemsCount: number;\n  }\n> = {\n  title: 'Layout/Tabs',\n  decorators: [withCenteredStory],\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The Tab component consists of three sub components:<br /><strong><Tabs.Root></strong> as the parent container<br /><strong><Tabs.Tab></strong> for each tab item<br /><strong><Tabs.Content></strong> for the tab content<br /><br /><em>This component has a controlled and uncontrolled state. When a currentTab is not provided, the component will track state internally.</em>',\n      },\n    },\n  },\n  component: Tabs.Root,\n  argTypes: {\n    itemsCount: {\n      control: { type: 'range', min: 1, max: 6, step: 1 },\n      description: 'Total number of tabs.',\n      table: {\n        type: { summary: 'number' },\n      },\n    },\n    initialTab: {\n      options: [\n        ...['-'],\n        ...Object.values(ExampleTabs),\n      ] as (keyof typeof ExampleTabs)[],\n      control: {\n        type: 'select',\n      },\n      description:\n        'The default selected page <em>before</em> any interaction.<br /><small>Changing value will not trigger story re-render.</small>',\n      table: {\n        defaultValue: { summary: 'undefined' },\n        type: { summary: 'string | undefined' },\n      },\n    },\n    currentTab: {\n      options: [\n        ...[undefined],\n        ...Object.values(ExampleTabs),\n      ] as (keyof typeof ExampleTabs)[],\n      control: {\n        type: 'select',\n      },\n      description:\n        'Current active tab. Used when component is controlled.<br /><small>Set to make component controlled.</small>',\n      table: {\n        defaultValue: { summary: 'undefined' },\n        type: { summary: 'string | undefined' },\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ITabsContainerProps & { itemsCount: number }>;\n\nexport const Primary: Story = {\n  name: 'Tabs',\n  args: {\n    itemsCount: 6,\n    initialTab: 'Skeletor',\n    currentTab: undefined,\n  },\n  render: ({ itemsCount, initialTab, currentTab }) => {\n    const tabs = ExampleTabs.slice(0, itemsCount);\n\n    return (\n      <>\n        <Tabs.Root initialTab={initialTab} currentTab={currentTab}>\n          {tabs.map((tab) => {\n            return (\n              <Tabs.Tab key={tab} id={tab}>\n                {tab}\n              </Tabs.Tab>\n            );\n          })}\n\n          {tabs.map((tab) => {\n            return (\n              <Tabs.Content key={tab} id={tab}>\n                <Text>Content for Tab &apos;{tab}&apos;</Text>\n              </Tabs.Content>\n            );\n          })}\n        </Tabs.Root>\n      </>\n    );\n  },\n};\n"]}
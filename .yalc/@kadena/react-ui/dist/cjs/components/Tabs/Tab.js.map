{"version":3,"file":"Tab.js","sourceRoot":"","sources":["../../../../src/components/Tabs/Tab.tsx"],"names":[],"mappings":";;;;;;AAAA,4DAAoC;AAEpC,kDAA0B;AAC1B,yCAAqD;AAS9C,MAAM,GAAG,GAAkB,CAAC,EACjC,QAAQ,EACR,QAAQ,GAAG,KAAK,EAChB,WAAW,EACX,EAAE,GACH,EAAE,EAAE;IACH,IAAI,WAAW,KAAK,SAAS,IAAI,EAAE,KAAK,SAAS;QAAE,OAAO,IAAI,CAAC;IAC/D,OAAO,CACL,0CACE,SAAS,EAAE,IAAA,oBAAU,EAAC,mBAAQ,EAAE,EAAE,CAAC,wBAAa,CAAC,EAAE,QAAQ,EAAE,CAAC,mBAC/C,QAAQ,cACb,EAAE,EACZ,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAE7B,QAAQ,CACF,CACV,CAAC;AACJ,CAAC,CAAC;AAjBW,QAAA,GAAG,OAiBd","sourcesContent":["import classNames from 'classnames';\nimport type { FC, ReactNode } from 'react';\nimport React from 'react';\nimport { selectedClass, tabClass } from './Tabs.css';\n\nexport interface ITabProps {\n  children: ReactNode;\n  selected?: boolean;\n  handleClick?: (tabId: string) => void;\n  id: string;\n}\n\nexport const Tab: FC<ITabProps> = ({\n  children,\n  selected = false,\n  handleClick,\n  id,\n}) => {\n  if (handleClick === undefined || id === undefined) return null;\n  return (\n    <button\n      className={classNames(tabClass, { [selectedClass]: selected })}\n      data-selected={selected}\n      data-tab={id}\n      onClick={() => handleClick(id)}\n    >\n      {children}\n    </button>\n  );\n};\n"]}
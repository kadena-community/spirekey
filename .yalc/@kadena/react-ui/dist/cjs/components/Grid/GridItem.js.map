{"version":3,"file":"GridItem.js","sourceRoot":"","sources":["../../../../src/components/Grid/GridItem.tsx"],"names":[],"mappings":";;;;;;AAAA,4DAAoC;AAEpC,kDAA0B;AAE1B,yCAAgF;AAQhF,MAAM,0BAA0B,GAAG,CACjC,UAA+B,EACZ,EAAE;IACrB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,OAAO,6BAAkB,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;KAC1C;IAED,OAAO,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACrD,OAAO,6BAAkB,CAAC,GAAsC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,MAAM,QAAQ,GAAuB,CAAC,EAC3C,QAAQ,EACR,UAAU,EACV,OAAO,GAAG,CAAC,GACZ,EAAE,EAAE;IACH,MAAM,SAAS,GAAG,IAAA,oBAAU,EAC1B,wBAAa,EACb,0BAAe,CAAC,OAAO,CAAC,EACxB,UAAU,IAAI,0BAA0B,CAAC,UAAU,CAAC,CACrD,CAAC;IACF,OAAO,CACL,uCAAK,SAAS,EAAE,SAAS,iBAAc,eAAe,IACnD,QAAQ,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,QAAQ,YAenB","sourcesContent":["import classNames from 'classnames';\nimport type { FC, ReactNode } from 'react';\nimport React from 'react';\nimport type { ResponsiveInputType } from './Grid.css';\nimport { gridItemClass, itemColumnVariants, rowSpanVariants } from './Grid.css';\n\nexport interface IGridItemProps {\n  children?: ReactNode;\n  columnSpan?: ResponsiveInputType;\n  rowSpan?: keyof typeof rowSpanVariants;\n}\n\nconst assembleColumnSpanVariants = (\n  columnSpan: ResponsiveInputType,\n): string | string[] => {\n  if (typeof columnSpan === 'number') {\n    return itemColumnVariants.xs[columnSpan];\n  }\n\n  return Object.entries(columnSpan).map(([key, value]) => {\n    return itemColumnVariants[key as keyof typeof itemColumnVariants][value];\n  });\n};\n\nexport const GridItem: FC<IGridItemProps> = ({\n  children,\n  columnSpan,\n  rowSpan = 1,\n}) => {\n  const className = classNames(\n    gridItemClass,\n    rowSpanVariants[rowSpan],\n    columnSpan && assembleColumnSpanVariants(columnSpan),\n  );\n  return (\n    <div className={className} data-testid=\"kda-grid-item\">\n      {children}\n    </div>\n  );\n};\n"]}
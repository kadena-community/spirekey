{"version":3,"file":"Grid.stories.js","sourceRoot":"","sources":["../../../../../src/components/Layout/Grid/Grid.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Grid, GridItem } from '@components/Layout/Grid';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { sprinkles } from '@theme/sprinkles.css';\nimport { vars } from '@theme/vars.css';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { componentClass, containerClass, itemClass } from '../stories.css';\nimport type { IGridProps } from './Grid';\nimport type { ResponsiveInputType } from './Grid.css';\nimport { gapVariants } from './Grid.css';\n\nconst spaceOptions: (keyof typeof vars.sizes | undefined)[] = [\n  undefined,\n  ...(Object.keys(vars.sizes) as (keyof typeof vars.sizes)[]),\n];\nconst contentWidthOptions: (keyof typeof vars.contentWidth | undefined)[] = [\n  undefined,\n  ...(Object.keys(vars.contentWidth) as (keyof typeof vars.contentWidth)[]),\n];\nconst dimensionOptions: string[] = ['100%', 'min-content', 'max-content'];\n\ntype StoryType = {\n  columnSpan: ResponsiveInputType;\n} & IGridProps;\n\nconst meta: Meta<StoryType> = {\n  title: 'Layout/Grid',\n  parameters: {\n    status: {\n      type: 'releaseCandidate',\n    },\n    docs: {\n      description: {\n        component:\n          'The Grid component is an abstraction over css grid that provides ` and `Item` subcomponents to compose a grid of equally sized columns.<br><br><i>Note: This component does not support grid templates or columns of varying sizes.</i>',\n      },\n    },\n  },\n  argTypes: {\n    overflow: {\n      options: ['hidden', 'visible', 'scroll', 'auto'],\n      control: {\n        type: 'select',\n      },\n      description: 'Overflow css property.',\n    },\n    gap: {\n      options: Object.keys(gapVariants) as (keyof typeof gapVariants)[],\n      control: { type: 'select' },\n      description:\n        'Defines the gaps (gutters) between rows and columns with pre-defined size values.',\n    },\n    columns: {\n      control: { type: 'object' },\n      description: 'Defines the number of columns.',\n      options: {\n        xs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        sm: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        md: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        lg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xxl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      },\n    },\n    columnSpan: {\n      control: { type: 'object' },\n      description: 'Defines the column span.',\n      options: {\n        xs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        sm: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        md: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        lg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xxl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      },\n    },\n    margin: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property with pre-defined size values.',\n    },\n    marginX: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property on X axis with pre-defined size values.',\n    },\n    marginY: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property on Y axis with pre-defined size values.',\n    },\n    marginTop: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top margin property with pre-defined size values.',\n    },\n    marginBottom: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top margin property with pre-defined size values.',\n    },\n\n    marginLeft: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for left margin property with pre-defined size values.',\n    },\n    marginRight: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for right margin property with pre-defined size values.',\n    },\n    padding: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property with pre-defined size values.',\n    },\n    paddingX: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property on X axis with pre-defined size values.',\n    },\n    paddingY: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property on Y axis with pre-defined size values.',\n    },\n    paddingTop: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top padding property with pre-defined size values.',\n    },\n    paddingBottom: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for bottom padding property with pre-defined size values.',\n    },\n    paddingLeft: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for left padding property with pre-defined size values.',\n    },\n    paddingRight: {\n      options: spaceOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for right padding property with pre-defined size values.',\n    },\n    width: {\n      options: [...spaceOptions, ...dimensionOptions, ...contentWidthOptions],\n      control: {\n        type: 'select',\n      },\n      description: 'Value for width property with pre-defined size values.',\n    },\n    minWidth: {\n      options: dimensionOptions,\n      control: {\n        type: 'select',\n      },\n      description: 'Value for minWidth property with pre-defined size values.',\n    },\n    maxWidth: {\n      options: [...dimensionOptions, ...contentWidthOptions],\n      control: {\n        type: 'select',\n      },\n      description: 'Value for maxWidth property with pre-defined size values.',\n    },\n    height: {\n      options: [...spaceOptions, ...dimensionOptions],\n      control: {\n        type: 'select',\n      },\n      description: 'Value for height property with pre-defined size values.',\n    },\n    minHeight: {\n      options: dimensionOptions,\n      control: {\n        type: 'select',\n      },\n      description: 'Value for minHeight property with pre-defined size values.',\n    },\n    maxHeight: {\n      options: dimensionOptions,\n      control: {\n        type: 'select',\n      },\n      description: 'Value for maxHeight property with pre-defined size values.',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StoryType>;\n\nconst defaultArgs: Record<string, string | undefined> = {\n  width: undefined,\n  minWidth: undefined,\n  maxWidth: undefined,\n  height: undefined,\n  minHeight: undefined,\n  maxHeight: undefined,\n  margin: undefined,\n  marginX: undefined,\n  marginY: undefined,\n  marginTop: undefined,\n  marginBottom: undefined,\n  marginLeft: undefined,\n  marginRight: undefined,\n  gap: undefined,\n  columns: undefined,\n  padding: undefined,\n  paddingX: undefined,\n  paddingY: undefined,\n  paddingTop: undefined,\n  paddingBottom: undefined,\n  paddingLeft: undefined,\n  paddingRight: undefined,\n  overflow: undefined,\n};\n\nexport const Primary: Story = {\n  name: 'Grid',\n  args: {\n    ...defaultArgs,\n    gap: '$xl',\n    columns: {\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 10,\n      xxl: 12,\n    },\n  },\n  render: ({ gap, columns, ...rest }) => (\n    <div className={containerClass}>\n      <Grid gap={gap} columns={columns} className={componentClass} {...rest}>\n        {Array.from(new Array(12)).map((empty, i) => (\n          <GridItem key={i} className={itemClass}>\n            <div className={itemClass}>{i}</div>\n          </GridItem>\n        ))}\n\n        <GridItem className={itemClass}>\n          <div className={itemClass}>2</div>\n        </GridItem>\n        <GridItem className={itemClass}>\n          <div className={itemClass}>3</div>\n        </GridItem>\n        <GridItem className={itemClass}>\n          <div className={itemClass}>4</div>\n        </GridItem>\n        <GridItem className={itemClass}>\n          <div className={itemClass}>5</div>\n        </GridItem>\n        <GridItem className={itemClass}>\n          <div className={itemClass}>6</div>\n        </GridItem>\n        <GridItem className={itemClass}>\n          <div className={itemClass}>7</div>\n        </GridItem>\n\n        <GridItem className={itemClass}>\n          <div className={itemClass}>8</div>\n        </GridItem>\n      </Grid>\n    </div>\n  ),\n};\n\nexport const GridItemStory: Story = {\n  args: {\n    ...defaultArgs,\n    gap: '$xl',\n    columns: 12,\n    columnSpan: {\n      xs: 5,\n      sm: 10,\n      md: 6,\n      lg: 4,\n      xl: 2,\n      xxl: 1,\n    },\n  },\n  render: ({ gap, columns, columnSpan, ...rest }) => (\n    <div className={containerClass}>\n      <Grid gap={gap} columns={columns} className={componentClass} {...rest}>\n        <GridItem\n          className={classNames(\n            itemClass,\n            sprinkles({ bg: '$primaryHighContrast' }),\n          )}\n          columnSpan={columnSpan}\n        >\n          dynamic\n        </GridItem>\n        {Array.from(new Array(12)).map((empty, i) => (\n          <GridItem key={i} columnSpan={1} className={itemClass}>\n            1\n          </GridItem>\n        ))}\n      </Grid>\n    </div>\n  ),\n};\n"]}
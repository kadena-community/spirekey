{"version":3,"file":"Grid.stories.js","sourceRoot":"","sources":["../../../../../src/components/Layout/Grid/Grid.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Grid, GridItem } from '@components/Layout/Grid';\nimport { onLayer2 } from '@storyDecorators';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { atoms } from '@theme/atoms.css';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { componentClass, containerClass, itemClass } from '../stories.css';\nimport {\n  Legend,\n  defaultBoxArgs,\n  sharedStoryArgTypes,\n} from '../storyComponents';\nimport type { IGridProps } from './Grid';\nimport type { ResponsiveInputType } from './Grid.css';\n\ntype StoryType = {\n  columnSpan: ResponsiveInputType;\n} & IGridProps;\n\nconst meta: Meta<StoryType> = {\n  title: 'Layout/Grid',\n  component: Grid,\n  decorators: [\n    (story) => (\n      <>\n        {story()}\n        <Legend\n          items={[\n            { label: 'Margin', color: 'warning' },\n            { label: 'Padding + Gap', color: 'positive' },\n            { label: 'Content', color: 'info' },\n          ]}\n        />\n      </>\n    ),\n    onLayer2,\n  ],\n  parameters: {\n    status: {\n      type: 'releaseCandidate',\n    },\n    docs: {\n      description: {\n        component:\n          'The Grid component is an abstraction over css grid that provides `Grid` and `GridItem` components to compose a grid of equally sized columns.<br><br><i>Note: This component does not support grid templates or columns of varying sizes.</i>',\n      },\n    },\n  },\n  argTypes: {\n    ...sharedStoryArgTypes,\n    columns: {\n      control: { type: 'object' },\n      description: 'Defines the number of columns.',\n    },\n    columnSpan: {\n      control: { type: 'object' },\n      description: 'Defines the column span.',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StoryType>;\n\nconst {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  display,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  flex,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  alignItems,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  flexDirection,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  justifyContent,\n  ...defaultGridArgs\n} = defaultBoxArgs;\n\nexport const Primary: Story = {\n  name: 'Grid',\n  args: {\n    ...defaultGridArgs,\n    gap: 'xl',\n    columns: {\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 10,\n      xxl: 12,\n    },\n  },\n  render: ({ gap, columns, ...rest }) => (\n    <div className={containerClass}>\n      <Grid gap={gap} columns={columns} className={componentClass} {...rest}>\n        {Array.from(new Array(12)).map((empty, i) => (\n          <GridItem key={i} className={itemClass}>\n            {i}\n          </GridItem>\n        ))}\n      </Grid>\n    </div>\n  ),\n};\n\nexport const GridItemStory: Story = {\n  args: {\n    ...defaultGridArgs,\n    gap: 'xl',\n    columns: 12,\n    columnSpan: {\n      xs: 5,\n      sm: 10,\n      md: 6,\n      lg: 4,\n      xl: 2,\n      xxl: 1,\n    },\n  },\n  render: ({ gap, columns, columnSpan, ...rest }) => (\n    <div className={containerClass}>\n      <Grid gap={gap} columns={columns} className={componentClass} {...rest}>\n        <GridItem\n          className={classNames(\n            itemClass,\n            atoms({ backgroundColor: 'brand.secondary.default' }),\n          )}\n          columnSpan={columnSpan}\n        >\n          dynamic\n        </GridItem>\n        {Array.from(new Array(12)).map((empty, i) => (\n          <GridItem key={i} columnSpan={1} className={itemClass}>\n            1\n          </GridItem>\n        ))}\n      </Grid>\n    </div>\n  ),\n};\n"]}
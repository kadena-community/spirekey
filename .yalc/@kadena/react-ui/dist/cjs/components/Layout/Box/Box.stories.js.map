{"version":3,"file":"Box.stories.js","sourceRoot":"","sources":["../../../../../src/components/Layout/Box/Box.stories.tsx"],"names":[],"mappings":";;;;;;AACA,gDAA6C;AAC7C,uDAA4C;AAE5C,kDAA0B;AAC1B,gDAA2E;AAC3E,wDAI4B;AAE5B,MAAM,IAAI,GAAoB;IAC5B,KAAK,EAAE,YAAY;IACnB,SAAS,EAAE,SAAG;IACd,UAAU,EAAE,CAAC,2BAAQ,CAAC;IACtB,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,QAAQ;SACf;QACD,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,+DAA+D;oBAC/D,sLAAsL;aACzL;SACF;KACF;IACD,QAAQ,EAAE,qCAAmB;CAC9B,CAAC;AAEF,kBAAe,IAAI,CAAC;AAGP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE,gCAAc;IACpB,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACjB;QACE,8BAAC,SAAG,IAAC,SAAS,EAAE,4BAAc;YAC5B,8BAAC,SAAG,OAAK,KAAK,EAAE,SAAS,EAAE,4BAAc;gBACvC,uCAAK,SAAS,EAAE,uBAAS,kBAAmB,CACxC,CACF;QACN,8BAAC,wBAAM,IACL,KAAK,EAAE;gBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;gBACrC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE;gBACvC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;aACpC,GACD,CACD,CACJ;CACF,CAAC","sourcesContent":["import type { IBoxProps } from '@components/Layout/Box';\nimport { Box } from '@components/Layout/Box';\nimport { onLayer2 } from '@storyDecorators';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { componentClass, containerClass, itemClass } from '../stories.css';\nimport {\n  Legend,\n  defaultBoxArgs,\n  sharedStoryArgTypes,\n} from '../storyComponents';\n\nconst meta: Meta<IBoxProps> = {\n  title: 'Layout/Box',\n  component: Box,\n  decorators: [onLayer2],\n  parameters: {\n    status: {\n      type: 'stable',\n    },\n    docs: {\n      description: {\n        component:\n          'Box is the most basic building block of application layout.\\n' +\n          '\\nThis component accepts an `as` prop which allows the user to pass what html element the `Box` will render as well as many style attributes that are mapped to css utility classes.',\n      },\n    },\n  },\n  argTypes: sharedStoryArgTypes,\n};\n\nexport default meta;\ntype Story = StoryObj<IBoxProps>;\n\nexport const Primary: Story = {\n  name: 'Box - Margin',\n  args: defaultBoxArgs,\n  render: (props) => (\n    <>\n      <Box className={containerClass}>\n        <Box {...props} className={componentClass}>\n          <div className={itemClass}>Box Content</div>\n        </Box>\n      </Box>\n      <Legend\n        items={[\n          { label: 'Margin', color: 'warning' },\n          { label: 'Padding', color: 'positive' },\n          { label: 'Content', color: 'info' },\n        ]}\n      />\n    </>\n  ),\n};\n"]}
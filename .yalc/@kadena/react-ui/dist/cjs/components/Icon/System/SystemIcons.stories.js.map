{"version":3,"file":"SystemIcons.stories.js","sourceRoot":"","sources":["../../../../../src/components/Icon/System/SystemIcons.stories.tsx"],"names":[],"mappings":";;;;;;AACA,2CAA8C;AAE9C,kDAA0B;AAC1B,wDAAkD;AAClD,gDAAyD;AAOzD,MAAM,IAAI,GAAwC;IAChD,KAAK,EAAE,mBAAmB;IAC1B,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,8BAAY,CAAkC;YACnE,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;KACF;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC;AAGP,QAAA,OAAO,GAAU;IAC5B,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE;QACJ,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;QAEzB,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3C,OAAO,CACL,uCAAK,SAAS,EAAE,2BAAa,IAC1B,MAAM,CAAC,OAAO,CAAC,iBAAU,CAAC;aACxB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAErC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAClB,uCAAK,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,sBAAQ;YAC9B,8BAAC,IAAI,IAAC,IAAI,EAAE,IAAI,GAAI;YACpB,4CAAO,CAAC,CAAQ,CACZ,CACP,CAAC,CACA,CACP,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import type { IIconProps } from '@components/Icon';\nimport { SystemIcon } from '@components/Icon';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { sizeVariants } from '../IconWrapper.css';\nimport { gridContainer, gridItem } from '../stories.css';\n\n/*\n *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.\n * See https://storybook.js.org/docs/7.0/react/api/csf\n * to learn how to use render functions.\n */\nconst meta: Meta<{ icon: string } & IIconProps> = {\n  title: 'Icons/SystemIcons',\n  argTypes: {\n    icon: {\n      control: {\n        type: 'text',\n      },\n    },\n    size: {\n      options: Object.keys(sizeVariants) as (keyof typeof sizeVariants)[],\n      control: {\n        type: 'select',\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<{ icon: string } & IIconProps>;\n\nexport const Primary: Story = {\n  name: 'System',\n  args: {\n    icon: '',\n    size: 'md',\n  },\n  render: ({ icon, size }) => {\n    // eslint-disable-next-line @rushstack/security/no-unsafe-regexp\n    const searchRegexp = new RegExp(icon, 'i');\n    return (\n      <div className={gridContainer}>\n        {Object.entries(SystemIcon)\n          .filter(([k]) => searchRegexp.test(k))\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          .map(([k, Icon]) => (\n            <div key={k} className={gridItem}>\n              <Icon size={size} />\n              <span>{k}</span>\n            </div>\n          ))}\n      </div>\n    );\n  },\n};\n"]}
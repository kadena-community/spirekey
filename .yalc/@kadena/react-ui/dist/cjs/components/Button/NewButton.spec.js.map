{"version":3,"file":"NewButton.spec.js","sourceRoot":"","sources":["../../../../src/components/Button/NewButton.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport React, { useState } from 'react';\nimport { Button } from './NewButton';\n\nimport { afterEach, describe, expect, it, vi } from 'vitest';\n\ndescribe('Button', () => {\n  const onPressSpy = vi.fn();\n  const onPressStartSpy = vi.fn();\n  const onPressEndSpy = vi.fn();\n  const onPressUpSpy = vi.fn();\n  const onPressChangeSpy = vi.fn();\n\n  afterEach(() => {\n    onPressSpy.mockClear();\n  });\n\n  it('should handle defaults', async () => {\n    const user = userEvent.setup({ pointerEventsCheck: 0 });\n    const { getByRole, getByText } = render(\n      <Button onPress={onPressSpy}>Click Me</Button>,\n    );\n\n    const button = getByRole('button');\n    await user.click(button);\n    expect(onPressSpy).toHaveBeenCalledTimes(1);\n\n    const text = getByText('Click Me');\n    expect(text).not.toBeNull();\n  });\n\n  it('Should support press events', async () => {\n    const user = userEvent.setup({ pointerEventsCheck: 0 });\n    const { getByRole, getByText } = render(\n      <Button\n        onPress={onPressSpy}\n        onPressStart={onPressStartSpy}\n        onPressEnd={onPressEndSpy}\n        onPressUp={onPressUpSpy}\n        onPressChange={onPressChangeSpy}\n      >\n        Click Me\n      </Button>,\n    );\n\n    const button = getByRole('button');\n    await user.click(button);\n    expect(onPressStartSpy).toHaveBeenCalledTimes(1);\n    expect(onPressSpy).toHaveBeenCalledTimes(1);\n    expect(onPressEndSpy).toHaveBeenCalledTimes(1);\n    expect(onPressUpSpy).toHaveBeenCalledTimes(1);\n    expect(onPressChangeSpy).toHaveBeenCalledTimes(2);\n\n    const text = getByText('Click Me');\n    expect(text).not.toBeNull();\n  });\n\n  it('Should allow custom props to be passed through to the button', () => {\n    const { getByRole } = render(<Button data-foo=\"bar\">Click Me</Button>);\n    const button = getByRole('button');\n    expect(button).toHaveAttribute('data-foo', 'bar');\n  });\n\n  it('Should support aria-label', () => {\n    const { getByRole } = render(<Button aria-label=\"Test\" />);\n    const button = getByRole('button');\n    expect(button).toHaveAttribute('aria-label', 'Test');\n  });\n\n  it('Should support aria-labelledby', () => {\n    const { getByRole } = render(\n      <>\n        <span id=\"test\">Test</span>\n        <Button aria-labelledby=\"test\" />\n      </>,\n    );\n\n    const button = getByRole('button');\n    expect(button).toHaveAttribute('aria-labelledby', 'test');\n  });\n\n  it('Should support aria-describedby', () => {\n    const { getByRole } = render(\n      <>\n        <span id=\"test\">Test</span>\n        <Button aria-describedby=\"test\">Hi</Button>\n      </>,\n    );\n\n    const button = getByRole('button');\n    expect(button).toHaveAttribute('aria-describedby', 'test');\n  });\n\n  it('Should allow a custom className on the button', () => {\n    const { getByRole } = render(\n      <Button className=\"x-men-first-class\">Click Me</Button>,\n    );\n\n    const button = getByRole('button');\n    expect(button.getAttribute('class')).toEqual(\n      expect.stringContaining('x-men-first-class'),\n    );\n  });\n\n  it('Should handle deprecated onClick', async () => {\n    const user = userEvent.setup({ pointerEventsCheck: 0 });\n    const spyWarn = vi.spyOn(console, 'warn').mockImplementation(() => {});\n    const { getByRole } = render(\n      <Button onClick={onPressSpy}>Click Me</Button>,\n    );\n\n    const button = getByRole('button');\n    await user.click(button);\n    expect(onPressSpy).toHaveBeenCalledTimes(1);\n    expect(spyWarn).toHaveBeenCalledWith(\n      'onClick is deprecated, please use onPress',\n    );\n  });\n\n  it('Should not respond when disabled', async () => {\n    const user = userEvent.setup({ pointerEventsCheck: 0 });\n    const { getByRole } = render(\n      <Button onPress={onPressSpy} isDisabled>\n        Click Me\n      </Button>,\n    );\n\n    const button = getByRole('button');\n    await user.click(button);\n    expect(button).toBeDisabled();\n    expect(onPressSpy).not.toHaveBeenCalled();\n  });\n\n  it('Should support autoFocus', () => {\n    const { getByRole } = render(<Button autoFocus>Click Me</Button>);\n    const button = getByRole('button');\n    expect(document.activeElement).toBe(button);\n  });\n\n  it('Should display a spinner when isLoading prop is true', async () => {\n    const user = userEvent.setup({ pointerEventsCheck: 0 });\n    const onPressSpy = vi.fn();\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    const TestComponent = () => {\n      const [pending, setPending] = useState(false);\n      return (\n        <Button\n          onPress={(e) => {\n            setPending(true);\n            onPressSpy();\n          }}\n          isLoading={pending}\n        >\n          Click me\n        </Button>\n      );\n    };\n    const { getByRole, queryByRole } = render(<TestComponent />);\n    const button = getByRole('button');\n    expect(button).not.toHaveAttribute('aria-disabled');\n    await user.click(button);\n\n    // Button is disabled immediately and spinner is visible\n    expect(button).toHaveAttribute('aria-disabled', 'true');\n    const spinner = queryByRole('progressbar');\n    expect(spinner).toBeVisible();\n\n    // Multiple clicks shouldn't call onPressSpy\n    await user.click(button);\n    expect(onPressSpy).toHaveBeenCalledTimes(1);\n  });\n});\n"]}
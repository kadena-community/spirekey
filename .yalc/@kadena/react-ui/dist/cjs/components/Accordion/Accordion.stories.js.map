{"version":3,"file":"Accordion.stories.js","sourceRoot":"","sources":["../../../../src/components/Accordion/Accordion.stories.tsx"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAE1B,yBAA+B;AAE/B,MAAM,eAAe,GAAG,CAAC,CAAS,EAA0B,EAAE,CAAC,CAAC;IAC9D,KAAK,EAAE,iBAAiB,CAAC,EAAE;IAC3B,QAAQ,EAAE,CACR;;QACmC,CAAC;;QAAE,yCAAM;yFAGxC,CACL;IACD,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC;IAC9C,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;CACjD,CAAC,CAAC;AACH,MAAM,gBAAgB,GAAG,CAAC,CAAS,EAA4B,EAAE,CAC/D,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAE9D,MAAM,WAAW,GAAW,CAAC,CAAC;AAC9B,MAAM,cAAc,GAA6B,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAO/E,MAAM,IAAI,GAAqB;IAC7B,KAAK,EAAE,kBAAkB;IACzB,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,eAAe;SACtB;QACD,QAAQ,EAAE;YACR,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE,eAAe;SACtB;QACD,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,iYAAiY;aACpY;SACF;KACF;IACD,QAAQ,EAAE;QACR,MAAM,EAAE;YACN,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EACT,4HAA4H;YAC9H,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;gBAClC,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;aAC7B;SACF;KACF;CACF,CAAC;AAIW,QAAA,OAAO,GAAW;IAC7B,IAAI,EAAE,WAAW;IACjB,IAAI,EAAE;QACJ,MAAM,EAAE,KAAK;KACd;IACD,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;QACrB,MAAM,QAAQ,GAAG,cAAc,CAAC;QAChC,OAAO,CACL,8BAAC,YAAS,CAAC,IAAI,IAAC,MAAM,EAAE,MAAM,IAC3B,QAAQ,CAAC,GAAG,CACX,CACE,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAA0B,EAC5D,KAAK,EACL,EAAE,CAAC,CACH,8BAAC,YAAS,CAAC,OAAO,IAChB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,KAAK,IAET,QAAQ,CACS,CACrB,CACF,CACc,CAClB,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,kBAAe,IAAI,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport type { IAccordionProps, IAccordionSectionProps } from './';\nimport { Accordion } from './';\n\nconst generateSection = (i: number): IAccordionSectionProps => ({\n  title: `Section title ${i}`,\n  children: (\n    <p>\n      This is the content for section {i}.<br />\n      The type of this content is not restricted: any valid HTML content is\n      allowed.\n    </p>\n  ),\n  onOpen: () => console.log(`open section ${i}`),\n  onClose: () => console.log(`close section ${i}`),\n});\nconst generateSections = (n: number): IAccordionSectionProps[] =>\n  Array.from({ length: n }, (d, i) => generateSection(i + 1));\n\nconst sampleCount: number = 3;\nconst sampleSections: IAccordionSectionProps[] = generateSections(sampleCount);\n\ntype StoryProps = {\n  linked: boolean;\n  customSections: IAccordionSectionProps[];\n} & IAccordionProps;\n\nconst meta: Meta<StoryProps> = {\n  title: 'Layout/Accordion',\n  parameters: {\n    status: {\n      type: 'inDevelopment',\n    },\n    controls: {\n      hideNoControlsWarning: true,\n      sort: 'requiredFirst',\n    },\n    docs: {\n      description: {\n        component:\n          'The Accordion component allows the user to show and hide sections of content on a page.<br />These sections can be expanded and collapsed by clicking the section headers.<br /><br /><em>Note: this variant of the Accordion component is meant to be used to display content.<br />For Navigation purposes, please use the <strong>NavAccordion</strong> within the Navigation subgroup.</em>',\n      },\n    },\n  },\n  argTypes: {\n    linked: {\n      control: { type: 'boolean' },\n      description:\n        'When linked, only one section can be open at a time. If a section is opened, the previously opened section will be closed.',\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n};\n\ntype IStory = StoryObj<StoryProps>;\n\nexport const Dynamic: IStory = {\n  name: 'Accordion',\n  args: {\n    linked: false,\n  },\n  render: ({ linked }) => {\n    const sections = sampleSections;\n    return (\n      <Accordion.Root linked={linked}>\n        {sections.map(\n          (\n            { title, children, onOpen, onClose }: IAccordionSectionProps,\n            index,\n          ) => (\n            <Accordion.Section\n              onOpen={onOpen}\n              onClose={onClose}\n              title={title}\n              key={index}\n            >\n              {children}\n            </Accordion.Section>\n          ),\n        )}\n      </Accordion.Root>\n    );\n  },\n};\n\nexport default meta;\n"]}
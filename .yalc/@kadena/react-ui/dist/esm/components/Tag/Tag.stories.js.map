{"version":3,"file":"Tag.stories.js","sourceRoot":"","sources":["../../../../src/components/Tag/Tag.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ITagGroupProps } from '@components/Tag';\nimport { Tag, TagGroup, TagItem } from '@components/Tag';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React, { useState } from 'react';\nimport { Stack, SystemIcon } from '..';\n\nconst meta: Meta<ITagGroupProps> = {\n  title: 'Components/TagGroup',\n  component: TagGroup,\n  parameters: {\n    status: {\n      type: ['inDevelopment'],\n    },\n    docs: {\n      description: {\n        component:\n          'The `TagGroup` component is an implementation of [useTabGroup from react-aria](https://react-spectrum.adobe.com/react-aria/useTagGroup.html). Currently we have enabled options to close or disable tags, but we have disabled features like selection since there has not yet been a need for them.\\n\\nThe compound component is composed of the exposed `TagGroup` and `TagItem` components, check the examples below to see how to use them.\\n\\n*Note: In most cases, you should use the `TagGroup` and `TagItem` component composition to ensure that the tags are accessible, however if you need only the tag component styles, you can use the `Tag` component to compose your own custom component.*',\n      },\n    },\n  },\n  argTypes: {\n    label: {\n      description: 'Label for the group. Accepts a string or a ReactNode.',\n      control: {\n        type: 'text',\n      },\n    },\n    onRemove: {\n      description: 'Callback when a tag is removed',\n      control: {\n        type: null,\n      },\n    },\n    disabledKeys: {\n      description: 'Keys of tags that are disabled',\n      control: {\n        type: null,\n      },\n    },\n    className: {\n      description: \"Optional classnames to add to the tag's container\",\n      control: {\n        type: null,\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ITagGroupProps>;\n\nconst tags = [\n  { id: '1', name: 'News' },\n  { id: '2', name: 'Travel' },\n  { id: '3', name: 'Gaming' },\n  { id: '4', name: 'Shopping' },\n];\n\nexport const Group: Story = {\n  name: 'Group of tags',\n  args: {\n    label: undefined,\n  },\n  render: ({ label }) => {\n    return (\n      <TagGroup label={label}>\n        {tags.map((item) => (\n          <TagItem key={item.id}>{item.name}</TagItem>\n        ))}\n      </TagGroup>\n    );\n  },\n};\n\nexport const Removable: Story = {\n  name: 'Removable tags',\n  render: () => {\n    const [list, setList] = useState(tags);\n\n    return (\n      <TagGroup\n        label=\"Filter Categories\"\n        onRemove={(keys) => {\n          setList(list.filter((item) => !keys.has(item.id)));\n        }}\n      >\n        {list.map((item) => (\n          <TagItem key={item.id}>{item.name}</TagItem>\n        ))}\n      </TagGroup>\n    );\n  },\n};\n\nexport const Disabled: Story = {\n  name: 'Disabled tag',\n  render: () => {\n    const [list, setList] = useState(tags);\n\n    return (\n      <TagGroup\n        label=\"Filter Categories\"\n        onRemove={(keys) => {\n          setList(list.filter((item) => !keys.has(item.id)));\n        }}\n        disabledKeys={['2']}\n      >\n        {list.map((item) => (\n          <TagItem key={item.id}>{item.name}</TagItem>\n        ))}\n      </TagGroup>\n    );\n  },\n};\n\nexport const AsChild: Story = {\n  name: 'Tag styles and props set on their child',\n  render: () => {\n    return (\n      <TagGroup label=\"Kadena Resources\" tagAsChild>\n        <TagItem key=\"docs\">\n          <a href=\"https://docs.kadena.io/\">Kadena Docs</a>\n        </TagItem>\n        <TagItem key=\"tools\">\n          <a href=\"https://tools.kadena.io/\">Tools Website</a>\n        </TagItem>\n      </TagGroup>\n    );\n  },\n};\n\nexport const TagComponent: Story = {\n  name: 'Tag Styles Component',\n  render: () => {\n    return (\n      <Tag>\n        <Stack gap=\"xs\" alignItems=\"center\">\n          Tag Styles\n          <SystemIcon.Edit size=\"sm\" />\n        </Stack>\n      </Tag>\n    );\n  },\n};\n"]}
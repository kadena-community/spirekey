{"version":3,"file":"LinkButton.js","sourceRoot":"","sources":["../../../../src/components/Button/LinkButton.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAE7D,OAAO,UAAU,MAAM,YAAY,CAAC;AAOpC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAE1C,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAClE,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAC5C,OAAO,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAyB9C,SAAS,cAAc,CACrB,KAAuB,EACvB,YAA2C;;IAE3C,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;IACvC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClD,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAEtE,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC;IAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CACzB,KAAK,CAAC,IAAI,CACX,CAAC,CAAC,CAAC,CACF;QACG,KAAK,CAAC,SAAS;QACf,KAAK,CAAC,QAAQ;QACd,KAAK,CAAC,OAAO,CACb,CACJ,CAAC;IAEF,MAAM,sBAAsB,GAAG,GAC7B,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ;QAChC,CAAC,CAAC,KAAK,CAAC,QAAQ;QAChB,CAAC,CAAC,MAAA,SAAS,CAAC,YAAY,CAAC,mCAAI,IACjC,UAAU,CAAC,IAAI,EAAE,CAAC;IAElB,OAAO,CACL,8BACM,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,EACjD,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,UAAU,CACnB,MAAM,CAAC;YACL,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,SAAS,EAAE,KAAK,CAAC,SAAS;SAC3B,CAAC,EACF,KAAK,CAAC,SAAS,CAChB,EACD,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,KAAK,EAAE,KAAK,CAAC,KAAK,mBACH,KAAK,CAAC,SAAS,IAAI,SAAS,mBAC5B,KAAK,CAAC,UAAU,IAAI,SAAS,kBAC9B,SAAS,IAAI,SAAS,kBACtB,SAAS,IAAI,SAAS,kBACtB,SAAS,IAAI,SAAS,wBAChB,cAAc,IAAI,SAAS,IAE9C,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CACjB;QACG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;QAC5B,oBAAC,cAAc,mBACD,MAAM,gBACN,sBAAsB,EAClC,eAAe,SACf,CACD,CACJ,CAAC,CAAC,CAAC,CACF,OAAO,CACR,CACC,CACL,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC","sourcesContent":["/* eslint-disable @kadena-dev/no-eslint-disable */\n\nimport { mergeProps, useObjectRef } from '@react-aria/utils';\nimport type { RecipeVariants } from '@vanilla-extract/recipes';\nimport classNames from 'classnames';\nimport type {\n  ComponentProps,\n  ElementRef,\n  ForwardedRef,\n  ReactNode,\n} from 'react';\nimport React, { forwardRef } from 'react';\nimport type { AriaLinkOptions, HoverEvents } from 'react-aria';\nimport { useFocusRing, useHover, useLink } from 'react-aria';\nimport { ProgressCircle } from '../ProgressCircle/ProgressCircle';\nimport { button } from './SharedButton.css';\nimport { disableLoadingProps } from './utils';\n\ntype Variants = Omit<NonNullable<RecipeVariants<typeof button>>, 'onlyIcon'>;\ntype PickedAriaLinkProps = Omit<AriaLinkOptions, 'elementType'>;\n\nexport interface ILinkButtonProps\n  extends PickedAriaLinkProps,\n    HoverEvents,\n    Variants {\n  className?: string;\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  icon?: ReactNode;\n  children?: ReactNode;\n  /**\n   * @deprecated use `onPress` instead to be consistent with React Aria, also keep in mind that `onPress` is not a native event it is a synthetic event created by React Aria\n   * @see https://react-spectrum.adobe.com/react-aria/useButton.html#props\n   */\n  onClick?: ComponentProps<'button'>['onClick'];\n  style?: ComponentProps<'button'>['style'];\n  title?: ComponentProps<'button'>['title'];\n}\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable react/function-component-definition */\nfunction BaseLinkButton(\n  props: ILinkButtonProps,\n  forwardedRef: ForwardedRef<ElementRef<'a'>>,\n) {\n  props = disableLoadingProps(props);\n  const ref = useObjectRef(forwardedRef);\n  const { linkProps, isPressed } = useLink(props, ref);\n  const { hoverProps, isHovered } = useHover(props);\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing(props);\n\n  const onlyIcon = props.icon !== undefined;\n  const content = onlyIcon ? (\n    props.icon\n  ) : (\n    <>\n      {props.startIcon}\n      {props.children}\n      {props.endIcon}\n    </>\n  );\n\n  const isLoadingAriaLiveLabel = `${\n    typeof props.children === 'string'\n      ? props.children\n      : linkProps['aria-label'] ?? 'is'\n  } loading`.trim();\n\n  return (\n    <a\n      {...mergeProps(linkProps, hoverProps, focusProps)}\n      ref={ref}\n      className={classNames(\n        button({\n          variant: props.variant,\n          color: props.color,\n          isCompact: props.isCompact,\n          isLoading: props.isLoading,\n        }),\n        props.className,\n      )}\n      style={props.style}\n      title={props.title}\n      aria-disabled={props.isLoading || undefined}\n      data-disabled={props.isDisabled || undefined}\n      data-pressed={isPressed || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n    >\n      {props.isLoading ? (\n        <>\n          {onlyIcon ? null : 'Loading'}\n          <ProgressCircle\n            aria-hidden=\"true\"\n            aria-label={isLoadingAriaLiveLabel}\n            isIndeterminate\n          />\n        </>\n      ) : (\n        content\n      )}\n    </a>\n  );\n}\n\nexport const LinkButton = forwardRef(BaseLinkButton);\n"]}
{"version":3,"file":"Select.js","sourceRoot":"","sources":["../../../../../src/components/Form/Select/Select.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EACL,gBAAgB,EAChB,cAAc,EACd,sBAAsB,EACtB,SAAS,EACT,WAAW,GACZ,MAAM,cAAc,CAAC;AAkBtB,MAAM,CAAC,MAAM,MAAM,GAAqB,UAAU,CAGhD,SAAS,MAAM,CACf,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,GAAG,KAAK,EAAE,QAAQ,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE,EAC1E,GAAG;IAEH,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC;IAEvD,MAAM,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IACtC,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;IAE3C,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,cAAc,EAAE;YACpC,CAAC,sBAAsB,CAAC,EAAE,QAAQ;YAClC,CAAC,iBAAiB,CAAC,EAAE,QAAQ,IAAI,MAAM;SACxC,CAAC,iBACU,YAAY;QAEvB,IAAI,IAAI,CACP,8BAAM,SAAS,EAAE,SAAS;YACxB,oBAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG,CACb,CACR;QACD,8CACc,SAAS,EACrB,SAAS,EAAE,WAAW,EACtB,QAAQ,EAAE,QAAQ,EAClB,GAAG,EAAE,GAAG,KACJ,IAAI,IAEP,QAAQ,CACF;QACT,8BAAM,SAAS,EAAE,gBAAgB;YAC/B,oBAAC,WAAW,IAAC,IAAI,EAAC,IAAI,GAAG,CACpB,CACH,CACP,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport classNames from 'classnames';\nimport type { FC } from 'react';\nimport React, { forwardRef, useContext } from 'react';\nimport { baseOutlinedClass } from '../Form.css';\nimport { FormFieldWrapperContext } from '../FormFieldWrapper/FormFieldWrapper.context';\nimport {\n  chevronIconClass,\n  containerClass,\n  containerClassDisabled,\n  iconClass,\n  selectClass,\n} from './Select.css';\n\nexport interface ISelectProps\n  extends Omit<\n    React.HTMLAttributes<HTMLSelectElement>,\n    'aria-label' | 'as' | 'className' | 'children' | 'id'\n  > {\n  ariaLabel: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  icon?: keyof typeof SystemIcon;\n  ref?: React.ForwardedRef<HTMLSelectElement>;\n  onChange?: React.ChangeEventHandler<HTMLSelectElement>;\n  id: string;\n  value?: string;\n  outlined?: boolean;\n}\n\nexport const Select: FC<ISelectProps> = forwardRef<\n  HTMLSelectElement,\n  ISelectProps\n>(function Select(\n  { ariaLabel, children, disabled = false, outlined = false, icon, ...rest },\n  ref,\n) {\n  const { status } = useContext(FormFieldWrapperContext);\n\n  const Icon = icon && SystemIcon[icon];\n  const ChevronDown = SystemIcon.ChevronDown;\n\n  return (\n    <div\n      className={classNames(containerClass, {\n        [containerClassDisabled]: disabled,\n        [baseOutlinedClass]: outlined || status,\n      })}\n      data-testid=\"kda-select\"\n    >\n      {Icon && (\n        <span className={iconClass}>\n          <Icon size=\"md\" />\n        </span>\n      )}\n      <select\n        aria-label={ariaLabel}\n        className={selectClass}\n        disabled={disabled}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </select>\n      <span className={chevronIconClass}>\n        <ChevronDown size=\"md\" />\n      </span>\n    </div>\n  );\n});\n"]}
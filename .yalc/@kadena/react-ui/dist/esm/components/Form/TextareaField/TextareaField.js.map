{"version":3,"file":"TextareaField.js","sourceRoot":"","sources":["../../../../../src/components/Form/TextareaField/TextareaField.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AAMzE,MAAM,CAAC,MAAM,aAAa,GAA4B,UAAU,CAG9D,SAAS,aAAa,CACtB,EAAE,QAAQ,GAAG,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,EACvE,GAAG;IAEH,MAAM,SAAS,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;IAE1D,OAAO,CACL,6BAAK,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;QAC7D,KAAK,KAAK,SAAS,IAAI,CACtB,oBAAC,eAAe,IAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,GAAI,CACrE;QAED,oBAAC,QAAQ,IAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,KAAM,IAAI,GAAI;QAE3D,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,oBAAC,eAAe,QAAE,UAAU,CAAmB,CAChD;QACA,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,KAAK,UAAU,IAAI,CAC/C,oBAAC,eAAe,QAAE,UAAU,CAAmB,CAChD,CACG,CACP,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IFormFieldWrapperProps, ITextareaProps } from '@components/Form';\nimport { Textarea } from '@components/Form';\nimport type { FC } from 'react';\nimport React, { forwardRef } from 'react';\nimport { FormFieldHeader, FormFieldHelper } from '../FormFieldWrapper';\nimport { statusVariant } from '../FormFieldWrapper/FormFieldWrapper.css';\n\nexport interface ITextareaFieldProps\n  extends Omit<IFormFieldWrapperProps, 'htmlFor' | 'children'>,\n    Omit<ITextareaProps, 'disabled'> {}\n\nexport const TextareaField: FC<ITextareaFieldProps> = forwardRef<\n  HTMLTextAreaElement,\n  ITextareaFieldProps\n>(function TextareaField(\n  { disabled = false, id, status, tag, info, helperText, label, ...rest },\n  ref,\n) {\n  const statusVal = disabled === true ? 'disabled' : status;\n\n  return (\n    <div className={statusVal ? statusVariant[statusVal] : undefined}>\n      {label !== undefined && (\n        <FormFieldHeader htmlFor={id} label={label} tag={tag} info={info} />\n      )}\n\n      <Textarea ref={ref} disabled={disabled} id={id} {...rest} />\n\n      {Boolean(helperText) && status !== 'negative' && (\n        <FormFieldHelper>{helperText}</FormFieldHelper>\n      )}\n      {Boolean(helperText) && status === 'negative' && (\n        <FormFieldHelper>{helperText}</FormFieldHelper>\n      )}\n    </div>\n  );\n});\n"]}
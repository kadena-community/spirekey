{"version":3,"file":"Input.js","sourceRoot":"","sources":["../../../../../src/components/Form/Input/Input.tsx"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAG1C,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAEpE,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EACL,aAAa,EACb,kBAAkB,EAClB,UAAU,EACV,mBAAmB,EACnB,gBAAgB,EAChB,uBAAuB,GACxB,MAAM,aAAa,CAAC;AAiBrB,MAAM,CAAC,MAAM,KAAK,GAAoB,UAAU,CAC9C,SAAS,KAAK,CACZ,EACE,QAAQ,EACR,WAAW,EACX,SAAS,EACT,QAAQ,GAAG,KAAK,EAChB,QAAQ,EACR,MAAM,EACN,SAAS,EACT,UAAU,GAAG,aAAa,EAC1B,GAAG,IAAI,EACR,EACD,GAAG;IAEH,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CACnB,kBAAkB,EAClB;YACE,CAAC,iBAAiB,CAAC,EAAE,QAAQ,IAAI,MAAM;YACvC,CAAC,aAAa,CAAC,EAAE,QAAQ;SAC1B,EACD,SAAS,CACV;QAEA,OAAO,CAAC,WAAW,CAAC,IAAI,CACvB,6BAAK,SAAS,EAAE,UAAU,CAAC,uBAAuB,CAAC;YACjD,8BAAM,SAAS,EAAE,gBAAgB,IAAG,WAAW,CAAQ,CACnD,CACP;QACD,6BAAK,SAAS,EAAE,mBAAmB;YAChC,SAAS;YACV,+BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EACxD,QAAQ,EAAE,QAAQ,KACd,IAAI,GACR;YACD,QAAQ,IAAI,6BAAK,SAAS,EAAE,kBAAkB,IAAG,QAAQ,CAAO,CAC7D,CACF,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import classNames from 'classnames';\nimport type { FC, InputHTMLAttributes } from 'react';\nimport React, { forwardRef } from 'react';\n\nimport type { FormFieldStatus } from '../Form.css';\nimport { baseContainerClass, baseOutlinedClass } from '../Form.css';\n\nimport { atoms } from '@theme/atoms.css';\nimport {\n  disabledClass,\n  inputChildrenClass,\n  inputClass,\n  inputContainerClass,\n  leadingTextClass,\n  leadingTextWrapperClass,\n} from './Input.css';\n\nexport interface IInputProps\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'as' | 'id'> {\n  leadingText?: string;\n  startIcon?: React.ReactElement;\n  type?: React.HTMLInputTypeAttribute;\n  ref?: React.ForwardedRef<HTMLInputElement>;\n  id: string;\n  outlined?: boolean;\n  status?: FormFieldStatus;\n  fontFamily?: 'primaryFont' | 'codeFont';\n}\n\n/**\n * @deprecated Use `TextField` instead.\n */\nexport const Input: FC<IInputProps> = forwardRef<HTMLInputElement, IInputProps>(\n  function Input(\n    {\n      outlined,\n      leadingText,\n      startIcon,\n      disabled = false,\n      children,\n      status,\n      className,\n      fontFamily = 'primaryFont',\n      ...rest\n    },\n    ref,\n  ) {\n    return (\n      <div\n        className={classNames(\n          baseContainerClass,\n          {\n            [baseOutlinedClass]: outlined || status,\n            [disabledClass]: disabled,\n          },\n          className,\n        )}\n      >\n        {Boolean(leadingText) && (\n          <div className={classNames(leadingTextWrapperClass)}>\n            <span className={leadingTextClass}>{leadingText}</span>\n          </div>\n        )}\n        <div className={inputContainerClass}>\n          {startIcon}\n          <input\n            ref={ref}\n            className={classNames(inputClass, atoms({ fontFamily }))}\n            disabled={disabled}\n            {...rest}\n          />\n          {children && <div className={inputChildrenClass}>{children}</div>}\n        </div>\n      </div>\n    );\n  },\n);\n"]}
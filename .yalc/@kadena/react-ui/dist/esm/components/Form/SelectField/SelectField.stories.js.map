{"version":3,"file":"SelectField.stories.js","sourceRoot":"","sources":["../../../../../src/components/Form/SelectField/SelectField.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,wDAAwD,CAAC;AACvF,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C,OAAO,KAAK,MAAM,OAAO,CAAC;AAM1B,MAAM,IAAI,GAAqB;IAC7B,KAAK,EAAE,kBAAkB;IACzB,UAAU,EAAE;QACV,MAAM,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;QACjC,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,+JAA+J;aAClK;SACF;KACF;IACD,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,WAAW,EAAE,qBAAqB;YAClC,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,GAAG,EAAE;YACH,WAAW,EAAE,wCAAwC;YACrD,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,0DAA0D;YACvE,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,UAAU,EAAE;YACV,WAAW,EACT,4HAA4H;YAC9H,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,MAAM,EAAE;YACN,OAAO,EAAE;gBACP,SAAS;gBACT,GAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAoC;aAClE;YACD,WAAW,EACT,qGAAqG;YACvG,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,QAAQ,EAAE;YACR,WAAW,EAAE,gDAAgD;YAC7D,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;aAChB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;aACnC;SACF;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,0DAA0D;YACvE,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAgC;YAC/D,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;KACF;CACF,CAAC;AAIF,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE;QACJ,GAAG,EAAE,KAAK;QACV,UAAU,EAAE,qBAAqB;QACjC,IAAI,EAAE,YAAY;QAClB,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,SAAS;QACjB,IAAI,EAAE,SAAS;KAChB;IACD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QACnE,OAAO,CACL,oBAAC,WAAW,IACV,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE;gBACX,SAAS,EAAE,cAAc;gBACzB,EAAE,EAAE,YAAY;gBAChB,IAAI;gBACJ,WAAW,EAAE,uBAAuB;aACrC;YAED,gCAAQ,KAAK,EAAC,GAAG,eAAkB;YACnC,gCAAQ,KAAK,EAAC,GAAG,eAAkB,CACvB,CACf,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,eAAe,IAAI,CAAC","sourcesContent":["import type { ISelectFieldProps } from '@components/Form';\nimport { SelectField } from '@components/Form';\nimport { statusVariant } from '@components/Form/FormFieldWrapper/FormFieldWrapper.css';\nimport { SystemIcon } from '@components/Icon';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\n\ntype StoryProps = {\n  icon: keyof typeof SystemIcon;\n} & ISelectFieldProps;\n\nconst meta: Meta<StoryProps> = {\n  title: 'Form/SelectField',\n  parameters: {\n    status: { type: 'inDevelopment' },\n    docs: {\n      description: {\n        component:\n          'SelectField is the composition of the Select and FormFieldWrapper components to provide a select with a label, helper text, and other peripheral information.',\n      },\n    },\n  },\n  argTypes: {\n    label: {\n      description: 'Label for the input',\n      control: {\n        type: 'text',\n      },\n    },\n    tag: {\n      description: 'Tag that is rendered next to the label',\n      control: {\n        type: 'text',\n      },\n    },\n    info: {\n      description: 'Text that is rendered on the top right with an info icon',\n      control: {\n        type: 'text',\n      },\n    },\n    helperText: {\n      description:\n        'Text that is rendered below the input to give the user additional information. Often will be used for validation messages.',\n      control: {\n        type: 'text',\n      },\n    },\n    status: {\n      options: [\n        undefined,\n        ...(Object.keys(statusVariant) as (keyof typeof statusVariant)[]),\n      ],\n      description:\n        'This determines the color of the helper text and input border. It can be used to indicate an error.',\n      control: {\n        type: 'select',\n      },\n    },\n    disabled: {\n      description: 'Disables the input and applies visual styling.',\n      control: {\n        type: 'boolean',\n      },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    icon: {\n      description: 'Icon rendered inside the select to the left of the text.',\n      options: Object.keys(SystemIcon) as (keyof typeof SystemIcon)[],\n      control: {\n        type: 'select',\n      },\n    },\n  },\n};\n\ntype Story = StoryObj<StoryProps>;\n\nexport const Group: Story = {\n  name: 'Select Field',\n  args: {\n    tag: 'tag',\n    helperText: 'This is helper text',\n    info: '(optional)',\n    label: 'Label',\n    disabled: false,\n    status: undefined,\n    icon: 'Account',\n  },\n  render: ({ icon, disabled, status, tag, helperText, info, label }) => {\n    return (\n      <SelectField\n        tag={tag}\n        info={info}\n        label={label}\n        status={status}\n        disabled={disabled}\n        helperText={helperText}\n        selectProps={{\n          ariaLabel: 'Select Story',\n          id: 'inputStory',\n          icon,\n          placeholder: 'This is a placeholder',\n        }}\n      >\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n      </SelectField>\n    );\n  },\n};\n\nexport default meta;\n"]}
{"version":3,"file":"ProductIcon.stories.js","sourceRoot":"","sources":["../../../../../src/components/Icon/Product/ProductIcon.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAOzD,MAAM,IAAI,GAAwC;IAChD,KAAK,EAAE,oBAAoB;IAC3B,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,CAAC,eAAe,CAAC;SACxB;KACF;IACD,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;SACF;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAkC;YACnE,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAGpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,IAAI,EAAE,SAAS;IACf,IAAI,EAAE;QACJ,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;QAEzB,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3C,OAAO,CACL,6BAAK,SAAS,EAAE,aAAa,IAC1B,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;aACzB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAErC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAClB,6BAAK,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ;YAC9B,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI,GAAI;YACpB,kCAAO,CAAC,CAAQ,CACZ,CACP,CAAC,CACA,CACP,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import type { IIconProps } from '@components/Icon';\nimport { ProductIcon } from '@components/Icon';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { sizeVariants } from '../IconWrapper.css';\nimport { gridContainer, gridItem } from '../stories.css';\n\n/*\n *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.\n * See https://storybook.js.org/docs/7.0/react/api/csf\n * to learn how to use render functions.\n */\nconst meta: Meta<{ icon: string } & IIconProps> = {\n  title: 'Icons/ProductIcons',\n  parameters: {\n    status: {\n      type: ['needsRevision'],\n    },\n  },\n  argTypes: {\n    icon: {\n      control: {\n        type: 'text',\n      },\n    },\n    size: {\n      options: Object.keys(sizeVariants) as (keyof typeof sizeVariants)[],\n      control: {\n        type: 'select',\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<{ icon: string } & IIconProps>;\n\nexport const Primary: Story = {\n  name: 'Product',\n  args: {\n    icon: '',\n    size: 'md',\n  },\n  render: ({ icon, size }) => {\n    // eslint-disable-next-line @rushstack/security/no-unsafe-regexp\n    const searchRegexp = new RegExp(icon, 'i');\n    return (\n      <div className={gridContainer}>\n        {Object.entries(ProductIcon)\n          .filter(([k]) => searchRegexp.test(k))\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          .map(([k, Icon]) => (\n            <div key={k} className={gridItem}>\n              <Icon size={size} />\n              <span>{k}</span>\n            </div>\n          ))}\n      </div>\n    );\n  },\n};\n"]}
{"version":3,"file":"NavAccordion.js","sourceRoot":"","sources":["../../../../src/components/NavAccordion/NavAccordion.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAGxC,OAAO,EACL,mBAAmB,EACnB,mBAAmB,GACpB,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAC;AAW9D,MAAM,CAAC,MAAM,gBAAgB,GAA+B,CAAC,EAC3D,QAAQ,EACR,MAAM,GAAG,KAAK,EACd,QAAQ,GAAG,KAAK,GACjB,EAAE,EAAE;IACH,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GACnC,QAAQ,CAAoB,mBAAmB,CAAC,CAAC;IAEnD,MAAM,UAAU,GAAG,GAAgB,EAAE,CAAC,CACpC,6BAAK,SAAS,EAAE,wBAAwB,IAAG,QAAQ,CAAO,CAC3D,CAAC;IAEF,OAAO,CACL,oBAAC,mBAAmB,CAAC,QAAQ,IAC3B,KAAK,EAAE,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,EAAE,IAE/C,QAAQ,CAAC,CAAC,CAAC,CACV,6BAAK,SAAS,EAAE,cAAc;QAC5B,oBAAC,UAAU,OAAG,CACV,CACP,CAAC,CAAC,CAAC,CACF,oBAAC,UAAU,OAAG,CACf,CAC4B,CAChC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\nimport { darkThemeClass } from '@theme/index';\nimport type { FC, FunctionComponentElement } from 'react';\nimport React, { useState } from 'react';\nimport type { INavAccordionLinkProps, INavAccordionSectionProps } from '.';\nimport type { NavAccordionState } from './NavAccordion.context';\nimport {\n  NavAccordionContext,\n  initialOpenSections,\n} from './NavAccordion.context';\nimport { navAccordionWrapperClass } from './NavAccordion.css';\n\ntype Child = FunctionComponentElement<\n  INavAccordionSectionProps | INavAccordionLinkProps\n>;\nexport interface INavAccordionRootProps {\n  children?: Child[];\n  linked?: boolean;\n  darkMode?: boolean;\n}\n\nexport const NavAccordionRoot: FC<INavAccordionRootProps> = ({\n  children,\n  linked = false,\n  darkMode = false,\n}) => {\n  const [openSections, setOpenSections] =\n    useState<NavAccordionState>(initialOpenSections);\n\n  const NavElement = (): JSX.Element => (\n    <nav className={navAccordionWrapperClass}>{children}</nav>\n  );\n\n  return (\n    <NavAccordionContext.Provider\n      value={{ openSections, setOpenSections, linked }}\n    >\n      {darkMode ? (\n        <div className={darkThemeClass}>\n          <NavElement />\n        </div>\n      ) : (\n        <NavElement />\n      )}\n    </NavAccordionContext.Provider>\n  );\n};\n"]}
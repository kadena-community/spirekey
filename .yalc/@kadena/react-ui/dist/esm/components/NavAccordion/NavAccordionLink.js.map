{"version":3,"file":"NavAccordionLink.js","sourceRoot":"","sources":["../../../../src/components/NavAccordion/NavAccordionLink.tsx"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAQ3D,MAAM,CAAC,MAAM,gBAAgB,GAA+B,CAAC,EAC3D,OAAO,EACP,QAAQ,EACR,IAAI,EACJ,GAAG,SAAS,EACb,EAAE,EAAE;IACH,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;YAClC,GAAG,SAAS;YACZ,GAAG,QAAQ,CAAC,KAAK;YACjB,SAAS,EAAE,qBAAqB;SACjC,CAAC,CAAC;KACJ;IACD,OAAO,CACL,2BAAG,SAAS,EAAE,UAAU,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,IAAI,IACxD,QAAQ,CACP,CACL,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import classNames from 'classnames';\nimport type { FC, ReactNode } from 'react';\nimport React from 'react';\nimport { navAccordionLinkClass } from './NavAccordion.css';\n\nexport interface INavAccordionLinkProps {\n  asChild?: boolean;\n  children: ReactNode;\n  href?: string;\n}\n\nexport const NavAccordionLink: FC<INavAccordionLinkProps> = ({\n  asChild,\n  children,\n  href,\n  ...restProps\n}) => {\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...restProps,\n      ...children.props,\n      className: navAccordionLinkClass,\n    });\n  }\n  return (\n    <a className={classNames(navAccordionLinkClass)} href={href}>\n      {children}\n    </a>\n  );\n};\n"]}
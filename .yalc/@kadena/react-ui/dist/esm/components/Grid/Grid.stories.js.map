{"version":3,"file":"Grid.stories.js","sourceRoot":"","sources":["../../../../src/components/Grid/Grid.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Grid } from '@components/Grid';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { sprinkles } from '@theme/sprinkles.css';\nimport { vars } from '@theme/vars.css';\nimport classNames from 'classnames';\nimport React from 'react';\nimport type { ResponsiveInputType } from './Grid.css';\nimport { gapVariants } from './Grid.css';\nimport type { IGridRootProps } from './GridRoot';\nimport { ContentClass } from './stories.css';\n\nconst selectOptions: (keyof typeof vars.sizes | undefined)[] = [\n  undefined,\n  ...(Object.keys(vars.sizes) as (keyof typeof vars.sizes)[]),\n];\n\nconst meta: Meta<\n  {\n    columnSpan: ResponsiveInputType;\n  } & IGridRootProps\n> = {\n  title: 'Layout/Grid',\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The Grid component is an abstraction over css grid that provides `Root` and `Item` subcomponents to compose a grid of equally sized columns.<br><br><i>Note: This component does not support grid templates or columns of varying sizes.</i>',\n      },\n    },\n  },\n  component: Grid.Root,\n  argTypes: {\n    gap: {\n      options: Object.keys(gapVariants) as (keyof typeof gapVariants)[],\n      control: { type: 'select' },\n      description:\n        'Defines the gaps (gutters) between rows and columns with pre-defined size values.',\n    },\n    columns: {\n      control: { type: 'object' },\n      description: 'Defines the number of columns.',\n      options: {\n        xs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        sm: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        md: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        lg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xxl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      },\n    },\n    columnSpan: {\n      control: { type: 'object' },\n      description: 'Defines the column span.',\n      options: {\n        xs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        sm: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        md: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        lg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        xxl: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      },\n    },\n    margin: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property with pre-defined size values.',\n    },\n    marginX: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property on X axis with pre-defined size values.',\n    },\n    marginY: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for margin property on Y axis with pre-defined size values.',\n    },\n    marginTop: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top margin property with pre-defined size values.',\n    },\n    marginBottom: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top margin property with pre-defined size values.',\n    },\n\n    marginLeft: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for left margin property with pre-defined size values.',\n    },\n    marginRight: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for right margin property with pre-defined size values.',\n    },\n    padding: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property with pre-defined size values.',\n    },\n    paddingX: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property on X axis with pre-defined size values.',\n    },\n    paddingY: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for padding property on Y axis with pre-defined size values.',\n    },\n    paddingTop: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for top padding property with pre-defined size values.',\n    },\n    paddingBottom: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for bottom padding property with pre-defined size values.',\n    },\n    paddingLeft: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for left padding property with pre-defined size values.',\n    },\n    paddingRight: {\n      options: selectOptions,\n      control: {\n        type: 'select',\n      },\n      description:\n        'Set value for right padding property with pre-defined size values.',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<\n  {\n    columnSpan: ResponsiveInputType;\n  } & IGridRootProps\n>;\n\n/*\n *👇 Render functions are a framework specific feature to allow you control on how the component renders.\n * See https://storybook.js.org/docs/7.0/react/api/csf\n * to learn how to use render functions.\n */\n\nexport const GridRoot: Story = {\n  name: 'Grid',\n  args: {\n    gap: '$xl',\n    columns: {\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 10,\n      xxl: 12,\n    },\n    margin: undefined,\n    marginX: undefined,\n    marginY: undefined,\n    marginTop: undefined,\n    marginBottom: undefined,\n    marginLeft: undefined,\n    marginRight: undefined,\n    padding: undefined,\n    paddingX: undefined,\n    paddingY: undefined,\n    paddingTop: undefined,\n    paddingBottom: undefined,\n    paddingLeft: undefined,\n    paddingRight: undefined,\n  },\n  render: ({\n    gap,\n    columns,\n    margin,\n    marginX,\n    marginY,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    padding,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n  }) => (\n    <>\n      <Grid.Root\n        gap={gap}\n        columns={columns}\n        margin={margin}\n        marginX={marginX}\n        marginY={marginY}\n        marginTop={marginTop}\n        marginBottom={marginBottom}\n        marginLeft={marginLeft}\n        marginRight={marginRight}\n        padding={padding}\n        paddingX={paddingX}\n        paddingY={paddingY}\n        paddingTop={paddingTop}\n        paddingBottom={paddingBottom}\n        paddingLeft={paddingLeft}\n        paddingRight={paddingRight}\n      >\n        {Array.from(new Array(12)).map((empty, i) => (\n          <Grid.Item key={i}>\n            <div className={ContentClass}>{i}</div>\n          </Grid.Item>\n        ))}\n\n        <Grid.Item>\n          <div className={ContentClass}>2</div>\n        </Grid.Item>\n        <Grid.Item>\n          <div className={ContentClass}>3</div>\n        </Grid.Item>\n        <Grid.Item>\n          <div className={ContentClass}>4</div>\n        </Grid.Item>\n        <Grid.Item>\n          <div className={ContentClass}>5</div>\n        </Grid.Item>\n        <Grid.Item>\n          <div className={ContentClass}>6</div>\n        </Grid.Item>\n        <Grid.Item>\n          <div className={ContentClass}>7</div>\n        </Grid.Item>\n\n        <Grid.Item>\n          <div className={ContentClass}>8</div>\n        </Grid.Item>\n      </Grid.Root>\n    </>\n  ),\n};\n\nexport const GridItem: Story = {\n  args: {\n    gap: '$xl',\n    columns: 12,\n    columnSpan: {\n      xs: 5,\n      sm: 10,\n      md: 6,\n      lg: 4,\n      xl: 2,\n      xxl: 1,\n    },\n  },\n  render: ({ gap, columns, columnSpan }) => (\n    <>\n      <Grid.Root gap={gap} columns={columns}>\n        <Grid.Item columnSpan={columnSpan}>\n          <div\n            className={classNames(\n              ContentClass,\n              sprinkles({ bg: '$primaryAccent' }),\n            )}\n          >\n            dynamic\n          </div>\n        </Grid.Item>\n        {Array.from(new Array(12)).map((empty, i) => (\n          <Grid.Item key={i} columnSpan={1}>\n            <div className={ContentClass}>1</div>\n          </Grid.Item>\n        ))}\n      </Grid.Root>\n    </>\n  ),\n};\n"]}
{"version":3,"file":"Input.js","sourceRoot":"","sources":["../../../../src/components/Input/Input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAE1C,OAAO,EACL,cAAc,EACd,aAAa,EACb,UAAU,EACV,mBAAmB,EACnB,gBAAgB,EAChB,uBAAuB,EACvB,uBAAuB,EACvB,aAAa,GACd,MAAM,aAAa,CAAC;AAkBrB,MAAM,CAAC,MAAM,KAAK,GAAoB,UAAU,CAC9C,SAAS,KAAK,CACZ,EACE,QAAQ,EACR,WAAW,EACX,gBAAgB,EAChB,QAAQ,EACR,SAAS,EACT,QAAQ,GAAG,KAAK,EAChB,GAAG,IAAI,EACR,EACD,GAAG;IAEH,MAAM,SAAS,GAAG,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;IACrD,MAAM,QAAQ,GAAG,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;IAElD,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,cAAc,EAAE;YACpC,CAAC,aAAa,CAAC,EAAE,QAAQ;YACzB,CAAC,aAAa,CAAC,EAAE,QAAQ;SAC1B,CAAC,iBACU,WAAW;QAEtB,OAAO,CAAC,WAAW,CAAC,IAAI,CACvB,6BACE,SAAS,EAAE,UAAU,CACnB,uBAAuB,EACvB,gBAAgB,IAAI,uBAAuB,CAAC,gBAAgB,CAAC,CAC9D;YAED,8BAAM,SAAS,EAAE,gBAAgB,IAAG,WAAW,CAAQ,CACnD,CACP;QACD,6BAAK,SAAS,EAAE,mBAAmB;YAChC,QAAQ,IAAI,oBAAC,QAAQ,IAAC,IAAI,EAAC,IAAI,GAAG;YACnC,+BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,UAAU,EACrB,QAAQ,EAAE,QAAQ,KACd,IAAI,GACR;YACD,SAAS,IAAI,oBAAC,SAAS,IAAC,IAAI,EAAC,IAAI,GAAG,CACjC,CACF,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport classNames from 'classnames';\nimport type { FC, InputHTMLAttributes } from 'react';\nimport React, { forwardRef } from 'react';\nimport type { vars } from 'src/styles';\nimport {\n  containerClass,\n  disabledClass,\n  inputClass,\n  inputContainerClass,\n  leadingTextClass,\n  leadingTextWidthVariant,\n  leadingTextWrapperClass,\n  outlinedClass,\n} from './Input.css';\n\nexport interface IInputProps\n  extends Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'as' | 'disabled' | 'children' | 'className' | 'id'\n  > {\n  leadingText?: string;\n  leadingTextWidth?: keyof typeof vars.sizes;\n  leftIcon?: keyof typeof SystemIcon;\n  rightIcon?: keyof typeof SystemIcon;\n  disabled?: boolean;\n  type?: React.HTMLInputTypeAttribute;\n  ref?: React.ForwardedRef<HTMLInputElement>;\n  id: string;\n  outlined?: boolean;\n}\n\nexport const Input: FC<IInputProps> = forwardRef<HTMLInputElement, IInputProps>(\n  function Input(\n    {\n      outlined,\n      leadingText,\n      leadingTextWidth,\n      leftIcon,\n      rightIcon,\n      disabled = false,\n      ...rest\n    },\n    ref,\n  ) {\n    const RightIcon = rightIcon && SystemIcon[rightIcon];\n    const LeftIcon = leftIcon && SystemIcon[leftIcon];\n\n    return (\n      <div\n        className={classNames(containerClass, {\n          [outlinedClass]: outlined,\n          [disabledClass]: disabled,\n        })}\n        data-testid=\"kda-input\"\n      >\n        {Boolean(leadingText) && (\n          <div\n            className={classNames(\n              leadingTextWrapperClass,\n              leadingTextWidth && leadingTextWidthVariant[leadingTextWidth],\n            )}\n          >\n            <span className={leadingTextClass}>{leadingText}</span>\n          </div>\n        )}\n        <div className={inputContainerClass}>\n          {LeftIcon && <LeftIcon size=\"md\" />}\n          <input\n            ref={ref}\n            className={inputClass}\n            disabled={disabled}\n            {...rest}\n          />\n          {RightIcon && <RightIcon size=\"md\" />}\n        </div>\n      </div>\n    );\n  },\n);\n"]}
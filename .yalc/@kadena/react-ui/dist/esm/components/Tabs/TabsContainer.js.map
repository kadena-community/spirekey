{"version":3,"file":"TabsContainer.js","sourceRoot":"","sources":["../../../../src/components/Tabs/TabsContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\nimport type { FC, ReactNode } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Tab } from './Tab';\nimport { TabContent } from './TabContent';\nimport { selectorLine, tabsContainer, tabsContainerWrapper } from './Tabs.css';\n\nexport interface ITabsContainerProps {\n  children?: ReactNode;\n  initialTab?: string;\n  currentTab?: string;\n  className?: string;\n}\n\nexport const TabsContainer: FC<ITabsContainerProps> = ({\n  children,\n  initialTab = undefined,\n  currentTab = undefined,\n  ...props\n}) => {\n  const [_activeTab, setActiveTab] = useState(initialTab);\n  const activeTab = currentTab || _activeTab;\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const selectedUnderlineRef = useRef<HTMLSpanElement | null>(null);\n\n  useEffect(() => {\n    if (!containerRef.current || !selectedUnderlineRef.current) return;\n    //find the selectedTab\n    let selected = containerRef.current.querySelector(\n      '[data-selected=\"true\"]',\n    ) as HTMLButtonElement;\n\n    if (selected === undefined || selected === null) {\n      selected = containerRef.current.querySelectorAll(\n        'button',\n      )[0] as HTMLButtonElement;\n    }\n\n    // set position of the bottom line\n    selectedUnderlineRef.current.style.setProperty(\n      'transform',\n      `translateX(${selected.offsetLeft}px)`,\n    );\n    selectedUnderlineRef.current.style.setProperty(\n      'width',\n      `${selected.offsetWidth}px`,\n    );\n  }, [containerRef, activeTab, selectedUnderlineRef]);\n\n  const handleClick = (tabId: string): void => {\n    setActiveTab(tabId);\n  };\n\n  return (\n    <section {...props}>\n      <div className={tabsContainerWrapper}>\n        <div ref={containerRef} className={tabsContainer}>\n          {React.Children.map(children, (child) => {\n            if (!React.isValidElement(child)) return null;\n\n            if (child.type === Tab) {\n              const props = {\n                ...child.props,\n                key: child.props.id,\n                selected: activeTab === child.props.id,\n                handleClick,\n              };\n              return React.cloneElement(child, props);\n            }\n            return null;\n          })}\n\n          <span ref={selectedUnderlineRef} className={selectorLine}></span>\n        </div>\n      </div>\n\n      {React.Children.map(children, (child) => {\n        if (!React.isValidElement(child)) return null;\n\n        if (child.type === TabContent) {\n          const props = {\n            selected: activeTab === child.props.id,\n          };\n          return React.cloneElement(child, props);\n        }\n\n        return null;\n      })}\n    </section>\n  );\n};\n"]}
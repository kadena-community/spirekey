{"version":3,"file":"paginate.test.js","sourceRoot":"","sources":["../../../../src/components/Pagination/paginate.test.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;QACpE,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mFAAmF,EAAE,GAAG,EAAE;QAC3F,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;QAC1E,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC7D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;SACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC7D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;SACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;QAC1E,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;QAC1E,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Original source: https://github.com/seek-oss/braid-design-system/blob/master/packages/braid-design-system/src/lib/components/Pagination/paginate.ts\nimport { paginate } from './paginate';\n\ndescribe('paginate', () => {\n  it(`should return the required pages when 'total' < 'maxPages'`, () => {\n    expect(paginate({ page: 1, total: 4, maxPages: 5 })).toEqual([1, 2, 3, 4]);\n  });\n\n  it(`should return the max number of pages when 'total' > 'maxPages' and 'page' is '1'`, () => {\n    expect(paginate({ page: 1, total: 20, maxPages: 5 })).toEqual([\n      1, 2, 3, 4, 5,\n    ]);\n  });\n\n  it(`should return the max number of pages around the selected 'page'`, () => {\n    expect(paginate({ page: 12, total: 20, maxPages: 5 })).toEqual([\n      10, 11, 12, 13, 14,\n    ]);\n  });\n\n  it(`should return the last pages when 'page' is the 'total'`, () => {\n    expect(paginate({ page: 20, total: 20, maxPages: 5 })).toEqual([\n      16, 17, 18, 19, 20,\n    ]);\n  });\n\n  it(`should return the correct pages when 'page' is < the middle page`, () => {\n    expect(paginate({ page: 3, total: 20, maxPages: 5 })).toEqual([\n      1, 2, 3, 4, 5,\n    ]);\n  });\n\n  it(`should return the correct pages when 'page' is the middle page`, () => {\n    expect(paginate({ page: 4, total: 20, maxPages: 5 })).toEqual([\n      2, 3, 4, 5, 6,\n    ]);\n  });\n\n  it(`should return the correct pages when 'page' is > the middle page`, () => {\n    expect(paginate({ page: 5, total: 20, maxPages: 5 })).toEqual([\n      3, 4, 5, 6, 7,\n    ]);\n  });\n});\n"]}
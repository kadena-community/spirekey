{"version":3,"file":"Breadcrumbs.stories.js","sourceRoot":"","sources":["../../../../src/components/Breadcrumbs/Breadcrumbs.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AACtD,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,SAAS,GAAa;IAC1B,QAAQ;IACR,UAAU;IACV,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;CACd,CAAC;AAEF,MAAM,IAAI,GAKN;IACF,KAAK,EAAE,wBAAwB;IAC/B,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,yiBAAyiB;aAC5iB;SACF;KACF;IACD,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,WAAW,EACT,2FAA2F;YAC7F,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAiC;YACjE,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;aACf;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACpD;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAapB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,IAAI,EAAE,aAAa;IACnB,IAAI,EAAE;QACJ,IAAI,EAAE,gBAAgB;QACtB,UAAU,EAAE,CAAC;KACd;IACD,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;QAC/B,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC7C,OAAO,CACL,oBAAC,WAAW,CAAC,IAAI,IAAC,IAAI,EAAE,IAAI,IACzB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACvB,OAAO,CACL,oBAAC,WAAW,CAAC,IAAI,IACf,GAAG,EAAE,IAAI,EACT,IAAI,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,IAE9C,IAAI,CACY,CACpB,CAAC;QACJ,CAAC,CAAC,CACe,CACpB,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import type { IBreadcrumbsProps } from '@components/Breadcrumbs';\nimport { Breadcrumbs } from '@components/Breadcrumbs';\nimport { ProductIcon } from '@components/Icon';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\n\nconst ItemArray: string[] = [\n  'He-man',\n  'Skeletor',\n  'Orko',\n  'Teela-Na',\n  'Cringer',\n  'King Randor',\n];\n\nconst meta: Meta<\n  {\n    itemsCount: number;\n    icon: keyof typeof ProductIcon;\n  } & IBreadcrumbsProps\n> = {\n  title: 'Navigation/Breadcrumbs',\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The Breadcrumb component displays the position of the current page within the site hierarchy, allowing page visitors to navigate the page hierarchy from their current location. It uses a composition of the `Root` and `Item` subcomponents to define the paths and structure of the entire breadcrumb component.<br><br><i>Note: In times when you need to use an external `Link` component (like next/link in Next.js), you can wrap the external component in `Breadcrumb.Item` and set the `asChild` prop to pass on styles and props to the child component.</i>',\n      },\n    },\n  },\n  argTypes: {\n    icon: {\n      description:\n        'The base icon for the breadcrumb component displayed to the left of the breadcrumb items.',\n      options: Object.keys(ProductIcon) as (keyof typeof ProductIcon)[],\n      control: {\n        type: 'select',\n      },\n    },\n    itemsCount: {\n      control: { type: 'range', min: 1, max: 6, step: 1 },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<\n  {\n    itemsCount: number;\n  } & IBreadcrumbsProps\n>;\n\n/*\n *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.\n * See https://storybook.js.org/docs/7.0/react/api/csf\n * to learn how to use render functions.\n */\n\nexport const Primary: Story = {\n  name: 'Breadcrumbs',\n  args: {\n    icon: 'KadenaOverview',\n    itemsCount: 3,\n  },\n  render: ({ itemsCount, icon }) => {\n    const items = ItemArray.slice(0, itemsCount);\n    return (\n      <Breadcrumbs.Root icon={icon}>\n        {items.map((item, idx) => {\n          return (\n            <Breadcrumbs.Item\n              key={item}\n              href={idx < items.length - 1 ? item : undefined}\n            >\n              {item}\n            </Breadcrumbs.Item>\n          );\n        })}\n      </Breadcrumbs.Root>\n    );\n  },\n};\n"]}
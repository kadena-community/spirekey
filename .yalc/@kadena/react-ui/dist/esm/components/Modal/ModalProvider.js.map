{"version":3,"file":"ModalProvider.js","sourceRoot":"","sources":["../../../../src/components/Modal/ModalProvider.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxE,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAM1C,MAAM,CAAC,MAAM,aAAa,GAA4B,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACrE,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAC;IACvD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAqB,SAAS,CAAC,CAAC;IAClE,MAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IACzC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,EAAa,CAAC;IACpD,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,EAAc,CAAC;IAErE,SAAS,CAAC,GAAG,EAAE;QACb,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAc,cAAc,CAAC,CAAC;QAClE,UAAU,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,WAAW,GAAG,WAAW,CAC7B,CAAC,IAAe,EAAE,KAAc,EAAE,OAAoB,EAAQ,EAAE;QAC9D,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChB,kBAAkB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC,EACD,EAAE,CACH,CAAC;IAEF,MAAM,UAAU,GAAG,WAAW,CAAC,GAAS,EAAE;QACxC,eAAe,aAAf,eAAe,uBAAf,eAAe,EAAI,CAAC;QACpB,UAAU,CAAC,SAAS,CAAC,CAAC;QACtB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,MAAM,GAAY,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAE5E,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,MAAM,EAAE;YACV,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACxC;aAAM;YACL,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC3C;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,OAAO,CACL,oBAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE;QACtD,QAAQ;QACR,MAAM;YACL,GAAG,CAAC,OAAO;YACX,YAAY,CACV;gBACE,oBAAC,KAAK,IAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,IAC1C,OAAO,CACF,CACP,EACH,GAAG,CAAC,OAAO,CACZ,CACmB,CACzB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\nimport type { FC, ReactNode } from 'react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal } from './Modal';\nimport { openModal } from './Modal.css';\nimport { ModalContext } from './useModal';\n\ninterface IModalProviderProps {\n  children?: ReactNode;\n}\n\nexport const ModalProvider: FC<IModalProviderProps> = ({ children }) => {\n  const [mounted, setMounted] = useState<boolean>(false);\n  const [title, setTitle] = useState<string | undefined>(undefined);\n  const ref = useRef<Element | null>(null);\n  const [content, setContent] = useState<ReactNode>();\n  const [onCloseCallback, setOnCloseCallback] = useState<() => void>();\n\n  useEffect(() => {\n    ref.current = document.querySelector<HTMLElement>('#modalportal');\n    setMounted(true);\n  }, []);\n\n  const renderModal = useCallback(\n    (node: ReactNode, title?: string, onClose?: () => void): void => {\n      setContent(node);\n      setTitle(title);\n      setOnCloseCallback(() => onClose);\n    },\n    [],\n  );\n\n  const clearModal = useCallback((): void => {\n    onCloseCallback?.();\n    setContent(undefined);\n    setTitle(undefined);\n  }, []);\n\n  const isOpen: boolean = mounted && Boolean(ref.current) && Boolean(content);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add(openModal);\n    } else {\n      document.body.classList.remove(openModal);\n    }\n  }, [isOpen]);\n\n  return (\n    <ModalContext.Provider value={{ renderModal, clearModal }}>\n      {children}\n      {isOpen &&\n        ref.current &&\n        createPortal(\n          <>\n            <Modal title={title} onClose={onCloseCallback}>\n              {content}\n            </Modal>\n          </>,\n          ref.current,\n        )}\n    </ModalContext.Provider>\n  );\n};\n"]}
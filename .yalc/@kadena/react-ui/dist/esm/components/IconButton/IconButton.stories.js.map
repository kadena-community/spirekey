{"version":3,"file":"IconButton.stories.js","sourceRoot":"","sources":["../../../../src/components/IconButton/IconButton.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { SystemIcon } from '@components/Icon';\nimport type { IIconButtonProps } from '@components/IconButton';\nimport { IconButton } from '@components/IconButton';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { colorVariants, typeVariants } from './IconButton.css';\n\nconst meta: Meta<IIconButtonProps> = {\n  title: 'Components/IconButton',\n  component: IconButton,\n  parameters: {\n    status: {\n      type: ['deprecated'],\n    },\n    docs: {\n      description: {\n        component:\n          'Use this variation of the Button component if you require a button with only an icon.',\n      },\n    },\n  },\n  argTypes: {\n    onClick: {\n      action: 'clicked',\n      if: { arg: 'as', eq: 'button' },\n      table: {\n        disable: true,\n      },\n    },\n    icon: {\n      options: [\n        ...['-'],\n        ...Object.keys(SystemIcon),\n      ] as (keyof typeof SystemIcon)[],\n      control: {\n        type: 'select',\n      },\n      table: {\n        type: { summary: Object.keys(SystemIcon).join(' | ') },\n      },\n    },\n    title: {\n      control: {\n        type: 'text',\n      },\n      description: 'aria label',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    variant: {\n      options: Object.keys(typeVariants) as (keyof typeof typeVariants)[],\n      control: {\n        type: 'select',\n      },\n      description: 'button style variant',\n      table: {\n        type: { summary: Object.keys(typeVariants).join(' | ') },\n        defaultValue: { summary: 'compact' },\n      },\n    },\n    color: {\n      options: Object.keys(colorVariants) as (keyof typeof colorVariants)[],\n      control: {\n        type: 'select',\n      },\n      description: 'color variant',\n      table: {\n        type: { summary: Object.keys(colorVariants).join(' | ') },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    as: {\n      description: 'render as button or anchor',\n      options: ['button', 'a'] as IIconButtonProps['as'][],\n      control: {\n        type: 'radio',\n      },\n      table: {\n        type: { summary: 'button | a' },\n        defaultValue: { summary: 'button' },\n      },\n    },\n    type: {\n      description: 'type of button',\n      options: ['button', 'submit', 'reset'] as IIconButtonProps['type'][],\n      control: {\n        type: 'select',\n      },\n      table: {\n        type: { summary: 'button | submit | reset' },\n        defaultValue: { summary: 'button' },\n      },\n      if: { arg: 'as', eq: 'button' },\n    },\n    href: {\n      description: 'href is required when rendered as anchor',\n      control: {\n        type: 'text',\n      },\n      if: { arg: 'as', eq: 'a' },\n    },\n    target: {\n      description: 'only used when rendered as anchor',\n      options: ['_blank', '_self'] as IIconButtonProps['target'][],\n      control: {\n        type: 'radio',\n      },\n      if: { arg: 'as', eq: 'a' },\n    },\n    active: {\n      description: 'set to apply active visual state',\n      control: {\n        type: 'boolean',\n        defaultValue: { summary: false },\n      },\n    },\n    asChild: {\n      description:\n        'Allow users to pass on styles, icons, and additional props to the child component. For example when using next/link in Next.js.',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<IIconButtonProps>;\n\nexport const Dynamic: Story = {\n  name: 'IconButton',\n  args: {\n    active: false,\n    as: 'button',\n    color: 'primary',\n    icon: 'Account',\n    title: 'test title',\n    type: 'button',\n    variant: 'compact',\n  },\n  render: ({ active, as, color, icon, onClick, title, type, variant }) => {\n    return (\n      <IconButton\n        active={active}\n        as={as}\n        color={color}\n        icon={icon}\n        onClick={onClick}\n        title={title}\n        type={type}\n        variant={variant}\n      />\n    );\n  },\n};\n"]}
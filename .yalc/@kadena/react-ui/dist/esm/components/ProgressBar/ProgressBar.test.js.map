{"version":3,"file":"ProgressBar.test.js","sourceRoot":"","sources":["../../../../src/components/ProgressBar/ProgressBar.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,IAAI,WAA0B,CAAC;IAC/B,UAAU,CAAC,GAAG,EAAE;QACd,WAAW,GAAG;YACZ;gBACE,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,UAAU;aACnB;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,SAAS;aAClB;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,YAAY;aACrB;SACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC7B,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,oBAAC,WAAW,IAAC,WAAW,EAAE,WAAW,GAAI,CAAC,CAAC;QAC1E,MAAM,WAAW,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;QACpD,MAAM,wBAAwB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAC3E,MAAM,yBAAyB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAC5E,MAAM,wBAAwB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAE3E,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACxC,MAAM,CAAC,wBAAwB,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACrD,MAAM,CAAC,yBAAyB,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACtD,MAAM,CAAC,wBAAwB,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACpC,MAAM,CAAC,oBAAC,WAAW,IAAC,WAAW,EAAE,WAAW,GAAI,CAAC,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAClD,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAC5B,oBAAC,WAAW,IAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,CACvD,CAAC;QAEF,MAAM,wBAAwB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAC3E,MAAM,yBAAyB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAE5E,MAAM,CAAC,wBAAwB,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACrD,MAAM,CAAC,yBAAyB,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEtD,MAAM,CACJ,MAAM,CAAC,aAAa,CAAC,4BAA4B,CAAC,CACnD,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { render, screen } from '@testing-library/react';\nimport React from 'react';\nimport { beforeEach, describe, expect, test } from 'vitest';\nimport type { ICheckpoint } from './ProgressBar';\nimport { ProgressBar } from './ProgressBar';\n\ndescribe('ProgressBar', () => {\n  let checkpoints: ICheckpoint[];\n  beforeEach(() => {\n    checkpoints = [\n      {\n        title: 'Checkpoint 1',\n        status: 'complete',\n      },\n      {\n        title: 'Checkpoint 2',\n        status: 'pending',\n      },\n      {\n        title: 'Checkpoint 3',\n        status: 'incomplete',\n      },\n    ];\n  });\n\n  test('renders correctly', () => {\n    const { getByTestId } = render(<ProgressBar checkpoints={checkpoints} />);\n    const progressBar = getByTestId('kda-progress-bar');\n    const firstCheckpointContainer = getByTestId('kda-checkpoint-container-0');\n    const secondCheckpointContainer = getByTestId('kda-checkpoint-container-1');\n    const thirdCheckpointContainer = getByTestId('kda-checkpoint-container-2');\n\n    expect(progressBar).toBeInTheDocument();\n    expect(firstCheckpointContainer).toBeInTheDocument();\n    expect(secondCheckpointContainer).toBeInTheDocument();\n    expect(thirdCheckpointContainer).toBeInTheDocument();\n  });\n\n  test('displays correct content', () => {\n    render(<ProgressBar checkpoints={checkpoints} />);\n\n    expect(screen.getByText('Checkpoint 1')).toBeInTheDocument();\n    expect(screen.getByText('Checkpoint 2')).toBeInTheDocument();\n    expect(screen.getByText('Checkpoint 3')).toBeInTheDocument();\n  });\n\n  test('displays correct number of checkpoints', () => {\n    const { getByTestId } = render(\n      <ProgressBar checkpoints={checkpoints.splice(0, 2)} />,\n    );\n\n    const firstCheckpointContainer = getByTestId('kda-checkpoint-container-0');\n    const secondCheckpointContainer = getByTestId('kda-checkpoint-container-1');\n\n    expect(firstCheckpointContainer).toBeInTheDocument();\n    expect(secondCheckpointContainer).toBeInTheDocument();\n\n    expect(\n      screen.queryByTestId('kda-checkpoint-container-2'),\n    ).not.toBeInTheDocument();\n  });\n});\n"]}
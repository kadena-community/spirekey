{"version":3,"file":"ProgressBar.stories.js","sourceRoot":"","sources":["../../../../src/components/ProgressBar/ProgressBar.stories.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,IAAI,GAA4B;IACpC,KAAK,EAAE,wBAAwB;IAC/B,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EACP,oEAAoE;aACvE;SACF;KACF;IACD,QAAQ,EAAE;QACR,WAAW,EAAE;YACX,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,yDAAyD;aACvE;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,eAAe,GAAkB;IACrC;QACE,KAAK,EAAE,cAAc;QACrB,MAAM,EAAE,UAAU;KACnB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,MAAM,EAAE,UAAU;KACnB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,MAAM,EAAE,SAAS;KAClB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,MAAM,EAAE,YAAY;KACrB;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,IAAI,EAAE,aAAa;IACnB,IAAI,EAAE;QACJ,WAAW,EAAE,eAAe;KAC7B;IACD,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;QAC1B,OAAO,oBAAC,WAAW,IAAC,WAAW,EAAE,WAAW,GAAI,CAAC;IACnD,CAAC;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport type { ICheckpoint, IProgressBarProps } from './ProgressBar';\nimport { ProgressBar } from './ProgressBar';\n\nconst meta: Meta<IProgressBarProps> = {\n  title: 'Components/ProgressBar',\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'A component that shows the completion status of a task or process.',\n      },\n    },\n  },\n  argTypes: {\n    checkpoints: {\n      control: {\n        type: 'object',\n        description: 'Each checkpoint has a <i>title</i> and a <i>status</i>.',\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<IProgressBarProps>;\n\nconst testCheckpoints: ICheckpoint[] = [\n  {\n    title: 'Checkpoint 1',\n    status: 'complete',\n  },\n  {\n    title: 'Checkpoint 2',\n    status: 'complete',\n  },\n  {\n    title: 'Checkpoint 3',\n    status: 'pending',\n  },\n  {\n    title: 'Checkpoint 4',\n    status: 'incomplete',\n  },\n];\n\nexport const Primary: Story = {\n  name: 'ProgressBar',\n  args: {\n    checkpoints: testCheckpoints,\n  },\n  render: ({ checkpoints }) => {\n    return <ProgressBar checkpoints={checkpoints} />;\n  },\n};\n"]}
{"version":3,"file":"Link.js","sourceRoot":"","sources":["../../../../src/components/Link/Link.tsx"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,IAAI,CAAC;AAChC,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAYhE,MAAM,CAAC,MAAM,IAAI,GAAmB,CAAC,EACnC,OAAO,GAAG,KAAK,EACf,KAAK,GAAG,KAAK,EACb,QAAQ,EACR,IAAI,EACJ,SAAS,GAAG,MAAM,EAClB,GAAG,SAAS,EACb,EAAE,EAAE;IACH,MAAM,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAEtC,MAAM,WAAW,GAAG,UAAU,CAAC,kBAAkB,EAAE;QACjD,CAAC,cAAc,CAAC,EAAE,KAAK;KACxB,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,CAAC,YAAuB,EAAa,EAAE,CAAC,CAC1D;QACG,IAAI,IAAI,SAAS,KAAK,MAAM,IAAI,oBAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG;QAClD,YAAY;QACZ,IAAI,IAAI,SAAS,KAAK,OAAO,IAAI,oBAAC,IAAI,IAAC,IAAI,EAAC,IAAI,GAAG,CACnD,CACJ,CAAC;IAEF,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;YAClC,GAAG,SAAS;YACZ,GAAG,QAAQ,CAAC,KAAK;YACjB,SAAS,EAAE,WAAW;YACtB,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;SAC/C,CAAC,CAAC;KACJ;IAED,OAAO,CACL,2BAAG,SAAS,EAAE,WAAW,KAAM,SAAS,IACrC,WAAW,CAAC,QAAQ,CAAC,CACpB,CACL,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import classnames from 'classnames';\nimport type { FC, ReactNode } from 'react';\nimport React from 'react';\nimport { SystemIcon } from '..';\nimport { blockLinkClass, linkContainerClass } from './Link.css';\n\nexport interface ILinkProps {\n  asChild?: boolean;\n  block?: boolean;\n  children: ReactNode;\n  href?: string;\n  icon?: keyof typeof SystemIcon;\n  iconAlign?: 'left' | 'right';\n  target?: '_blank' | '_self' | '_parent' | '_top';\n}\n\nexport const Link: FC<ILinkProps> = ({\n  asChild = false,\n  block = false,\n  children,\n  icon,\n  iconAlign = 'left',\n  ...restProps\n}) => {\n  const Icon = icon && SystemIcon[icon];\n\n  const linkClasses = classnames(linkContainerClass, {\n    [blockLinkClass]: block,\n  });\n\n  const getContents = (linkContents: ReactNode): ReactNode => (\n    <>\n      {Icon && iconAlign === 'left' && <Icon size=\"md\" />}\n      {linkContents}\n      {Icon && iconAlign === 'right' && <Icon size=\"md\" />}\n    </>\n  );\n\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...restProps,\n      ...children.props,\n      className: linkClasses,\n      children: getContents(children.props.children),\n    });\n  }\n\n  return (\n    <a className={linkClasses} {...restProps}>\n      {getContents(children)}\n    </a>\n  );\n};\n"]}
{"version":3,"file":"NavHeaderLink.js","sourceRoot":"","sources":["../../../../src/components/NavHeader/NavHeaderLink.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAC7D,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,EAAE,0BAA0B,EAAE,MAAM,+BAA+B,CAAC;AAU3E,SAAS,OAAO,CAAC,IAAY,EAAE,QAAgB;IAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AAED,MAAM,CAAC,MAAM,aAAa,GAA4B,CAAC,EACrD,QAAQ,EACR,OAAO,EACP,OAAO,GAAG,KAAK,EACf,IAAI,EACJ,GAAG,SAAS,EACb,EAAE,EAAE;IACH,MAAM,GAAG,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IAC5C,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,UAAU,CAC/D,0BAA0B,CAC3B,CAAC;IAEF,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,EAAE;QACtC,CAAC,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;KAClE,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;YAC1D,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC;SACtD;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;IAExC,MAAM,QAAQ,GAAG,CAAC,CAAsC,EAAQ,EAAE;QAChE,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACzD,aAAa,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,OAAO;YAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;YAClC,GAAG,SAAS;YACZ,IAAI;YACJ,GAAG,QAAQ,CAAC,KAAK;YACjB,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ;YACjC,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,QAAQ;YACjB,GAAG;SACJ,CAAC,CAAC;KACJ;IAED,OAAO,CACL;QACE,2BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,QAAQ,EACjB,IAAI,EAAE,IAAI,KACN,SAAS,IAEZ,QAAQ,CACP,CACD,CACN,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\nimport classNames from 'classnames';\nimport type { FC, HTMLAttributeAnchorTarget, ReactNode } from 'react';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { activeLinkClass, linkClass } from './NavHeader.css';\nimport { NavHeaderNavigationContext } from './NavHeaderNavigation.context';\n\nexport interface INavHeaderLinkProps {\n  children: ReactNode;\n  href: string;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>;\n  target?: HTMLAttributeAnchorTarget;\n  asChild?: boolean;\n}\n\nfunction hasPath(path: string, basePath: string): boolean {\n  return path.indexOf(basePath) === 0;\n}\n\nexport const NavHeaderLink: FC<INavHeaderLinkProps> = ({\n  children,\n  onClick,\n  asChild = false,\n  href,\n  ...restProps\n}) => {\n  const ref = useRef<HTMLAnchorElement>(null);\n  const { setGlowPosition, setActiveHref, activeHref } = useContext(\n    NavHeaderNavigationContext,\n  );\n\n  const className = classNames(linkClass, {\n    [activeLinkClass]: activeHref ? hasPath(activeHref, href) : false,\n  });\n\n  useEffect(() => {\n    if (activeHref && hasPath(activeHref, href) && ref.current) {\n      setGlowPosition(ref.current.getBoundingClientRect());\n    }\n  }, [activeHref, href, setGlowPosition]);\n\n  const _onClick = (e: React.MouseEvent<HTMLAnchorElement>): void => {\n    setGlowPosition(e.currentTarget.getBoundingClientRect());\n    setActiveHref(href);\n    if (onClick) onClick(e);\n  };\n\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...restProps,\n      href,\n      ...children.props,\n      children: children.props.children,\n      className: className,\n      onClick: _onClick,\n      ref,\n    });\n  }\n\n  return (\n    <li>\n      <a\n        ref={ref}\n        className={className}\n        onClick={_onClick}\n        href={href}\n        {...restProps}\n      >\n        {children}\n      </a>\n    </li>\n  );\n};\n"]}
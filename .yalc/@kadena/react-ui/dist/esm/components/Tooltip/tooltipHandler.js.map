{"version":3,"file":"tooltipHandler.js","sourceRoot":"","sources":["../../../../src/components/Tooltip/tooltipHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,KAAoC,EACpC,GAAoC,EAC9B,EAAE;IACR,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;IAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;IAC5C,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;IACzB,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;IACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAEpC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IAEtD,QAAQ,SAAS,EAAE;QACjB,KAAK,KAAK;YACR,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,CAClD,IAAI,CAAC;YACL,MAAM;QACR,KAAK,QAAQ;YACX,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,CAClD,IAAI,CAAC;YACL,MAAM;QACR,KAAK,MAAM;YACT,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,CACnD,IAAI,CAAC;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC;YACtD,MAAM;QACR,KAAK,OAAO;YACV,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,CACnD,IAAI,CAAC;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YAChD,MAAM;KACT;AACH,CAAC,CAAC","sourcesContent":["import type React from 'react';\nimport { visibleClass } from './Tooltip.css';\n\nexport const tooltipHandler = (\n  event: React.MouseEvent<HTMLElement>,\n  ref: React.RefObject<HTMLDivElement>,\n): void => {\n  const target = event.target as HTMLElement;\n  const rect = target.getBoundingClientRect();\n  const node = ref.current;\n  if (!node) {\n    throw new Error('Tooltip node is not defined');\n  }\n  node.classList.toggle(visibleClass);\n\n  const placement = node.getAttribute('data-placement');\n\n  switch (placement) {\n    case 'top':\n      node.style.top = `${rect.top - node.offsetHeight}px`;\n      node.style.left = `${\n        rect.left + rect.width / 2 - node.offsetWidth / 2\n      }px`;\n      break;\n    case 'bottom':\n      node.style.top = `${rect.top + rect.height}px`;\n      node.style.left = `${\n        rect.left + rect.width / 2 - node.offsetWidth / 2\n      }px`;\n      break;\n    case 'left':\n      node.style.top = `${\n        rect.top + rect.height / 2 - node.offsetHeight / 2\n      }px`;\n      node.style.left = `${rect.left - node.offsetWidth}px`;\n      break;\n    case 'right':\n      node.style.top = `${\n        rect.top + rect.height / 2 - node.offsetHeight / 2\n      }px`;\n      node.style.left = `${rect.left + rect.width}px`;\n      break;\n  }\n};\n"]}
{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAOzD,MAAM,CAAC,MAAM,OAAO,GAGhB,UAAU,CACZ,CAAC,EAAE,QAAQ,EAAE,SAAS,GAAG,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;IACzC,OAAO,CACL,6BAAK,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,oBAAkB,SAAS;QAC5D,6BAAK,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,GAAI;QAC3C,QAAQ,CACL,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import React, { forwardRef } from 'react';\nimport { arrowVariants, container } from './Tooltip.css';\n\nexport interface ITooltipProps {\n  placement?: 'top' | 'bottom' | 'left' | 'right';\n  children: React.ReactNode;\n}\n\nexport const Tooltip: React.ForwardRefExoticComponent<\n  Omit<ITooltipProps, 'ref'> & React.RefAttributes<HTMLDivElement>\n  // eslint-disable-next-line react/display-name\n> = forwardRef<HTMLDivElement, ITooltipProps>(\n  ({ children, placement = 'right' }, ref) => {\n    return (\n      <div className={container} ref={ref} data-placement={placement}>\n        <div className={arrowVariants[placement]} />\n        {children}\n      </div>\n    );\n  },\n);\n"]}
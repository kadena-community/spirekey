{"version":3,"file":"NavFooterLink.js","sourceRoot":"","sources":["../../../../src/components/NavFooter/NavFooterLink.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAU5C,MAAM,CAAC,MAAM,aAAa,GAA4B,CAAC,EACrD,QAAQ,EACR,OAAO,GAAG,KAAK,EACf,GAAG,SAAS,EACb,EAAE,EAAE;IACH,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;YAClC,GAAG,SAAS;YACZ,GAAG,QAAQ,CAAC,KAAK;YACjB,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ;SAClC,CAAC,CAAC;KACJ;IAED,OAAO,CACL,2BAAG,SAAS,EAAE,SAAS,KAAM,SAAS,iBAAc,sBAAsB,IACvE,QAAQ,CACP,CACL,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { FC, HTMLAttributeAnchorTarget, ReactNode } from 'react';\nimport React from 'react';\nimport { linkClass } from './NavFooter.css';\n\nexport type Target = '_self' | '_blank';\nexport interface INavFooterLinkProps {\n  children: ReactNode;\n  href?: string;\n  target?: HTMLAttributeAnchorTarget | undefined;\n  asChild?: boolean;\n}\n\nexport const NavFooterLink: FC<INavFooterLinkProps> = ({\n  children,\n  asChild = false,\n  ...restProps\n}) => {\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...restProps,\n      ...children.props,\n      className: linkClass,\n      children: children.props.children,\n    });\n  }\n\n  return (\n    <a className={linkClass} {...restProps} data-testid=\"kda-footer-link-item\">\n      {children}\n    </a>\n  );\n};\n"]}
{"version":3,"file":"themeUtils.js","sourceRoot":"","sources":["../../../src/styles/themeUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport type { StyleRule } from '@vanilla-extract/css';\nimport { fallbackVar } from '@vanilla-extract/css';\nimport type { Properties } from 'csstype';\nimport get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport { isNullOrUndefined } from '../utils/is';\nimport type { FlattenObject, ObjectPathLeaves } from '../utils/object';\nimport { flattenObject } from '../utils/object';\nimport { tokens } from './tokens/contract.css';\n\n// eslint-disable-next-line @kadena-dev/typedef-var\nexport const breakpoints = {\n  xs: '',\n  sm: 'screen and (min-width: 40rem)',\n  md: 'screen and (min-width: 48rem)',\n  lg: 'screen and (min-width: 64rem)',\n  xl: 'screen and (min-width: 80rem)',\n  xxl: 'screen and (min-width: 96rem)',\n};\n\nexport type Breakpoint = keyof typeof breakpoints;\ntype CSSProps = Omit<StyleRule, '@media' | '@supports'>;\n\nconst makeMediaQuery =\n  (\n    breakpoint: Breakpoint,\n  ): ((styles: CSSProps) => {\n    [x: string]: CSSProps;\n  }) =>\n  (styles: CSSProps) =>\n    Object.keys(styles).length === 0\n      ? {}\n      : {\n          [breakpoints[breakpoint] as string]: styles,\n        };\n\n// eslint-disable-next-line @kadena-dev/typedef-var\nconst mediaQuery = {\n  sm: makeMediaQuery('sm'),\n  md: makeMediaQuery('md'),\n  lg: makeMediaQuery('lg'),\n  xl: makeMediaQuery('xl'),\n  xxl: makeMediaQuery('xxl'),\n} as const;\n\nexport const responsiveStyle = ({\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  xxl,\n}: Partial<Record<Breakpoint, CSSProps>>): StyleRule => ({\n  ...omit(xs, '@media'),\n  ...(sm || md || lg || xl || xxl\n    ? {\n        '@media': {\n          ...mediaQuery.sm(sm ?? {}),\n          ...mediaQuery.md(md ?? {}),\n          ...mediaQuery.lg(lg ?? {}),\n          ...mediaQuery.xl(xl ?? {}),\n          ...mediaQuery.xxl(xxl ?? {}),\n        },\n      }\n    : {}),\n});\n\nexport const mapToProperty =\n  <Property extends keyof Properties<string | number>>(\n    property: Property,\n    breakpoint?: Breakpoint,\n  ): ((value: string | number) => StyleRule) =>\n  (value: string | number) => {\n    const styleRule = { [property]: value };\n\n    return breakpoint\n      ? responsiveStyle({ [breakpoint]: styleRule })\n      : styleRule;\n  };\n\ntype Token = string | { [key: string]: Token };\n\n// eslint-disable-next-line\nconst ignoredTokens = ['@hover', '@focus', '@disabled'] as const;\ntype IgnoredToken = (typeof ignoredTokens)[number];\n\nexport function flattenTokens<T extends Record<string, Token>>(\n  tokens: T,\n): FlattenObject<T, IgnoredToken> {\n  return flattenObject(tokens, ignoredTokens);\n}\n\nexport function token(\n  path: ObjectPathLeaves<typeof tokens.kda.foundation>,\n  fallback?: string,\n): string {\n  const v = get(tokens.kda.foundation, path);\n  if (!isNullOrUndefined(fallback)) {\n    return fallbackVar(v, fallback);\n  }\n  return v;\n}\n"]}